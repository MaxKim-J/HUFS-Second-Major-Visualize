{"version":3,"sources":["reducer/data sync /^/.//.*/.json$","style/styledComponents/input.ts","components/header/headerStyledComponents.ts","components/Emoji.tsx","components/header/HeaderArrow.tsx","components/header/Header.tsx","reducer/data.ts","config/admissions.ts","components/container/HeaderContainer.tsx","components/chartResourceComponents/ChartTitle.tsx","config/colleges.ts","utils/updateMajorInput.ts","utils/searchMajor.ts","components/chartResourceComponents/ChartMajorBox.tsx","style/styledComponents/majorBoxes.ts","components/chartResourceComponents/ChartSearchCompare.tsx","style/styledComponents/barChart.ts","components/chartResourceComponents/WithVisualChart.tsx","config/chart.ts","components/chartResourceComponents/ChartWithVisualChart.tsx","utils/getChartData.ts","components/chartResourceComponents/ChartNotice.tsx","components/chartComponents/AllDataChart.tsx","components/container/AllDataChartContainer.tsx","config/themes.ts","utils/searchTheme.ts","components/chartResourceComponents/WithSearchSelect.tsx","components/chartResourceComponents/ThemeWithSearchSelect.tsx","components/chartComponents/ThemeDataChart.tsx","components/container/ThemeDataChartContainer.tsx","components/container/AppLayoutContainer.tsx","components/default/IntroduceCard.tsx","config/introduce.ts","components/default/DefaultContent.tsx","components/chartResourceComponents/BaWithSearchSelect.tsx","components/chartResourceComponents/BaChartAndDetail.tsx","config/baNotice.ts","components/chartComponents/BaDataChart.tsx","components/container/BaDataChartConatainer.tsx","components/footer/footerStyledComponents.ts","components/footer/Footer.tsx","App.tsx","reducer/index.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","InputBtn","styled","div","InputSelect","span","InputBoxes","HeaderTitle","HeaderInputSelect","select","HeaderInputTitle","HeaderWrap","HeaderContent","Emoji","label","emoji","role","area-label","shakeEffectLarge","keyframes","HeaderArrowText","HeaderArrowContent","HeaderArrow","Header","admissionArr","onGetDataByInput","showArrow","useState","admission","campusName","input","setInput","handleInput","event","target","name","value","onClick","window","location","reload","className","onChange","idx","key","parseInt","initialState","majorData","baData","reducer","state","action","type","payload","require","searchedTarget","find","elem","semester","baTarget","HeaderContainer","setShowArrow","dispatch","useDispatch","getDataByInput","alert","ChartTitleContent","ChartSubTitleContent","ChartTitle","title","subTitle","seoulCollege","globalCollege","useMajorInput","college","majorArr","filter","classify","searchMajor","searchFor","MajorBox","MajorBoxCloseBtn","MajorBoxTitle","MajorBoxIcon","img","ChartMajorBox","major","icon","cancelFunction","src","alt","ChartMajorBoxes","ChartSearchCompare","updateSelectedInfo","selectedInfo","collegeArr","setCollegeArr","setMajorArr","useEffect","handleMajorInput","removeSelectedInfo","updateMajorInput","setSelectedInfo","BarChartWrap","BarChartLegendWrap","BarChartLegend","LegendColorBox","props","color","ChartBtn","MajorChart","direction","chart","chartType","setChartType","bar","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","isAnimationActive","barIdx","fill","line","lineIdx","stroke","strokeWidth","dot","length","BaChart","stackId","chartColor","ChartWithVisualChart","chartData","setChartData","chartSection","forEach","chartValueValid","getMajorChartData","admissionInfo","examPasser","examTaker","newSection","불합격자","합격자","응시자","getBaChartData","ChartNoticeBox","ChartNoticeContent","ChartNoticeTitle","ChartNoticeLine","ChartNoticeSection","MajorChartNotice","noticeResource","notice","split","GeneralChartNotice","ChartNotice","majorNoticeType","AllDataChart","setSelctedInfo","info","AllDataChartContainer","useSelector","seoulTheme","globalTheme","semesterTheme","searchTheme","theme","WithSearchSelect","themeArr","callFunction","useIcon","ThemeWithSearchSelect","updateSelectedThemeInfo","setThemeArr","selectedThemeInfo","ThemeDataChart","setSelctedThemeInfo","themeInfo","ThemeDataChartContainer","Content","Chart","AppLayoutContainer","allDataChart","themeDataChart","defaultContent","baDataChart","CardWrap","CardTitle","CardLogo","CardContent","IntroduceCard","contents","content","introduceArr","IntroduceCardsWrap","NavigationDot","checked","DefaultContent","cardNum","setCardNum","introduceLength","cardTimer","setInterval","num","clearInterval","card","updateCardNum","BaWithSearchSelect","onGetBaDataByInput","BaDetailContent","BaDetailContentPart","BaDetailPartTitle","BaDetailPartContent","BaChartAndDetail","passScore","averageScore","passPerAdmission","passRatio","toFixed","baNotices","BaDataChart","baNotice","BaDataChartContainer","getBaDataByInput","FooterWrap","FooterContent","FooterIcons","FooterIcon","FooterCopyrigths","FooterIntroduce","FooterSection","FooterIntroduceDetail","Footer","href","AppWrap","App","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a8fc4e7.chunk.js","sourcesContent":["var map = {\n\t\"./ba.json\": 95,\n\t\"./global.json\": 185,\n\t\"./seoul.json\": 186\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 184;","import styled from 'styled-components'\n\nexport const InputBtn = styled.div`\n  cursor: pointer;\n  font-size: 0.8rem;\n  margin-top: 0.5rem;\n  background-color: #002a48;\n  color: white;\n  padding: 0.1rem 0.7rem;\n  border-radius: 10px;\n  font-weight: 700;\n  transition: background-color 0.6s, color 0.6s;\n  &:hover {\n    background-color: #e2e2e2;\n    color: #002a48;\n  }\n`\nexport const InputSelect = styled.span`\n  margin-right: 10px;\n  font-size: 1.3rem;\n`\nexport const InputBoxes = styled.div`\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-content: center;\n  flex-wrap: wrap;\n  @media screen and (max-width: 750px) {\n    justify-content: center;\n  }\n`\n","import styled from 'styled-components'\n\nexport const HeaderTitle = styled.span`\n  font-size: 1.5rem;\n  font-family: Recko;\n  color: white;\n  cursor: pointer;\n`\n\nexport const HeaderInputSelect = styled.select`\n  font-size: 0.8rem;\n`\n\nexport const HeaderInputTitle = styled.span`\n  margin-right: 0.3rem;\n  margin-top: 0.4rem;\n  font-size: 0.8rem;\n  color: white;\n`\nexport const HeaderWrap = styled.div`\n  position: fixed;\n  padding-top: 2rem;\n  padding-bottom: 0.5rem;\n  width: 100%;\n  background: #002a48;\n  z-index: 999;\n`\nexport const HeaderContent = styled.div`\n  position: relative;\n  width: 80%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  @media screen and (max-width: 750px) {\n    width: 90%;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n  }\n\n  @media screen and (max-width: 360px) {\n    width: 95%;\n  }\n`\n\nexport const HeaderArrow = styled.div`\n  position: absolute;\n  z-index: 999;\n  top: 2rem;\n  right: 10px;\n`\n","import React from 'react'\n\ntype EmojiProps = {\n  label: string\n  emoji: string\n}\n\nconst Emoji = ({ label, emoji }: EmojiProps) => (\n  <span role=\"img\" area-label={label}>\n    {emoji}\n  </span>\n)\n\nexport default Emoji\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport Emoji from '../Emoji'\n\nconst shakeEffectLarge = keyframes`\n    0% {\n        top:5rem;\n    }\n    50%{\n        top:4rem;\n    }\n    100% {\n        top:5rem;\n    }\n`\n\nconst HeaderArrowText = styled.div`\n  padding: 0.2rem 0.4rem;\n  font-weight: 700;\n  color: #002a48;\n`\n\nconst HeaderArrowContent = styled.div`\n  margin-top: 2rem;\n  position: fixed;\n  top: 4rem;\n  -webkit-animation: ${shakeEffectLarge} 1.3s ease infinite;\n  font-size: 0.8rem;\n  @media screen and (max-width: 800px) {\n    display: none;\n  }\n`\n\nconst HeaderArrow = () => {\n  return (\n    <HeaderArrowContent>\n      <HeaderArrowText>\n        <Emoji label=\"hi\" emoji=\"⬆️\" />\n        학번, 캠퍼스 입력 후 시작!\n      </HeaderArrowText>\n    </HeaderArrowContent>\n  )\n}\n\nexport default HeaderArrow\n","import React, { useState } from 'react'\nimport {\n  InputBtn,\n  InputSelect,\n  InputBoxes,\n} from '../../style/styledComponents/input'\n\nimport {\n  HeaderWrap,\n  HeaderContent,\n  HeaderInputSelect,\n  HeaderInputTitle,\n  HeaderTitle,\n} from './headerStyledComponents'\n\nimport HeaderArrow from './HeaderArrow'\n\ntype headerProps = {\n  admissionArr: number[]\n  onGetDataByInput: (campusName: string, admission: number) => void\n  showArrow: Boolean\n}\n\nconst Header = ({ admissionArr, onGetDataByInput, showArrow }: headerProps) => {\n  const [input, setInput] = useState({\n    admission: '',\n    campusName: '',\n  })\n\n  const handleInput = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    let { name, value } = event.target\n    setInput({ ...input, [name]: value })\n  }\n\n  return (\n    <HeaderWrap>\n      <HeaderContent>\n        <HeaderTitle onClick={() => window.location.reload()}>\n          한국외대 이중전공 DB\n        </HeaderTitle>\n        <InputBoxes>\n          <InputSelect>\n            <HeaderInputTitle>캠퍼스</HeaderInputTitle>\n            <HeaderInputSelect\n              className=\"header-input-select\"\n              name=\"campusName\"\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>): void =>\n                handleInput(e)\n              }\n            >\n              <option value=\"\">캠퍼스 선택</option>\n              <option value=\"seoul\">서울</option>\n              <option value=\"global\">글로벌</option>\n            </HeaderInputSelect>\n          </InputSelect>\n          <InputSelect>\n            <HeaderInputTitle>학번</HeaderInputTitle>\n            <HeaderInputSelect\n              className=\"header-input-select\"\n              name=\"admission\"\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>): void =>\n                handleInput(e)\n              }\n            >\n              <option value=\"\">학번 선택</option>\n              {admissionArr.map((admission, idx) => (\n                <option key={idx} value={admission}>\n                  {admission}\n                </option>\n              ))}\n            </HeaderInputSelect>\n          </InputSelect>\n          <InputBtn\n            onClick={() => {\n              const { campusName, admission } = input\n              onGetDataByInput(campusName, parseInt(admission))\n            }}\n          >\n            시작\n            {showArrow ? <HeaderArrow /> : null}\n          </InputBtn>\n        </InputBoxes>\n      </HeaderContent>\n    </HeaderWrap>\n  )\n}\n\nexport default Header\n","//! 덕스타입 리덕스\nimport {\n  State,\n  Action,\n  getDataByInputPayload,\n  getBaDataByInputPayload,\n} from '../../@types/reducer'\nimport { ParsingResult } from '../../@types/majorData'\nimport { baParsingResult } from '../../@types/baData'\n\n//todo 1. 액션 타입 정의\nconst GETDATABYINPUT = 'data/GETDATABYINPUT' as const\nconst GETBADATABYINPUT = 'data/GETBADATABYINPUT' as const\n\n//todo 2. 액션 생성함수 정의\nexport const getDataByInput = (campusName: string, admission: number) => ({\n  type: GETDATABYINPUT,\n  payload: {\n    campusName: campusName,\n    admission: admission,\n  },\n})\n\nexport const getBaDataByInput = (semester: string) => ({\n  type: GETBADATABYINPUT,\n  payload: {\n    semester: semester,\n  },\n})\n\n//todo 3. 초기상태 정의\nconst initialState: State = {\n  majorData: {},\n  baData: {},\n  campusName: '',\n}\n\n//todo 4. 리듀서 작성(export default)\nconst reducer = (state: State = initialState, action: Action) => {\n  switch (action.type) {\n    //* 1. 헤더에 캠퍼스와 학번을 넣으면 store를 갱신함\n    case GETDATABYINPUT:\n      const { campusName, admission }: getDataByInputPayload = action.payload\n      const target = require(`./data/${campusName}.json`)\n      const searchedTarget: ParsingResult = target.find(\n        (elem: ParsingResult) => {\n          return elem.admission === admission\n        },\n      )\n      return {\n        ...state,\n        majorData: searchedTarget,\n        campusName: campusName,\n      }\n\n    case GETBADATABYINPUT:\n      const { semester }: getBaDataByInputPayload = action.payload\n      const baTarget = require('./data/ba.json')\n      const baData: baParsingResult = baTarget.find((elem: baParsingResult) => {\n        return elem.semester === semester\n      })\n      return {\n        ...state,\n        baData: baData,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","const admissionArr: number[] = [14, 15, 16, 17, 18, 19]\n\nexport default admissionArr\n","import React, { useState } from 'react'\nimport Header from '../header/Header'\nimport { getDataByInput } from '../../reducer/data'\nimport { useDispatch } from 'react-redux'\nimport admissionArr from '../../config/admissions'\n\nconst HeaderContainer = () => {\n  const [showArrow, setShowArrow] = useState(true)\n  const dispatch = useDispatch()\n\n  const onGetDataByInput = (campusName: string, admission: number): void => {\n    if (campusName && admission) {\n      dispatch(getDataByInput(campusName, admission))\n      setShowArrow(false)\n    } else {\n      alert('학번과 캠퍼스 모두 입력해주세요')\n    }\n  }\n\n  return (\n    <Header\n      admissionArr={admissionArr}\n      onGetDataByInput={onGetDataByInput}\n      showArrow={showArrow}\n    />\n  )\n}\n\nexport default HeaderContainer\n","import React from 'react'\nimport styled from 'styled-components'\n\ntype ChartTitleProps = {\n  title: string\n  subTitle?: string\n}\n\nconst ChartTitleContent = styled.div`\n  font-size: 1.6rem;\n  font-weight: 700;\n  margin-bottom: 0.7rem;\n`\nconst ChartSubTitleContent = styled.div`\n  margin-bottom: 1rem;\n`\n\nconst ChartTitle = ({ title, subTitle }: ChartTitleProps) => {\n  return (\n    <>\n      <ChartTitleContent>{title}</ChartTitleContent>\n      <ChartSubTitleContent>{subTitle}</ChartSubTitleContent>\n    </>\n  )\n}\n\nexport default ChartTitle\n","export const seoulCollege: string[] = [\n  '영어대학',\n  '서양어대학',\n  '아시아언어문화대학',\n  '중국어대학',\n  '일본어대학',\n  '사회과학대학',\n  '상경대학',\n  '사범대학',\n  '경영대학',\n  '국제학부',\n  'LD학부',\n  'LT학부',\n  '융합전공',\n]\n\nexport const globalCollege: string[] = [\n  '인문대학',\n  '통번역대학',\n  '동유럽학대학',\n  '국제지역대학',\n  '경상대학',\n  '바이오메디컬공학부',\n  '자연과학대학',\n  '공과대학',\n  '융합전공',\n]\n","import { MajorInfo } from '../../@types/majorData'\n\nconst useMajorInput = (college: string, majorArr: MajorInfo[]): string[] => {\n  const majors: MajorInfo[] = majorArr.filter(\n    (elem: MajorInfo) => elem.classify === college,\n  )\n  const result: string[] = majors.map((elem: MajorInfo) => elem.name)\n  return result\n}\n\nexport default useMajorInput\n","//* searchMajor 함수 == 인풋 : 학과명(string), majorInfo[] => 아웃풋: 학과명에 매치되는 majorInfo\nimport { MajorInfo } from '../../@types/majorData'\n\nconst searchMajor = (searchFor: string, majorArr: MajorInfo[]) => {\n  const result = majorArr.find((elem: MajorInfo) => {\n    return elem.name === searchFor\n  })\n\n  return result\n}\n\nexport default searchMajor\n","import React from 'react'\nimport styled from 'styled-components'\nimport Emoji from '../Emoji'\n\ntype ChartMajorBoxProps = {\n  major: string\n  icon?: string | null\n  cancelFunction?: (major: string) => void\n}\n\nconst MajorBox = styled.span`\n  padding: 0.2rem 1rem;\n  background-color: #f6f9fc;\n  border-radius: 20px;\n  margin: 0 0.5rem 0.5rem 0;\n  font-size: 0.8rem;\n  display: flex;\n  cursor: pointer;\n  transition: background-color 0.5s;\n  &:hover {\n    background-color: #d0d9e2;\n  }\n`\n\nconst MajorBoxCloseBtn = styled.div`\n  margin-left: 1rem;\n`\n\nconst MajorBoxTitle = styled.div`\n  font-size: 0.8rem;\n`\n\nconst MajorBoxIcon = styled.img`\n  width: 1rem;\n  height: 1rem;\n  margin-right: 0.3rem;\n  margin-top: 0.1rem;\n`\n\nconst ChartMajorBox = ({ major, icon, cancelFunction }: ChartMajorBoxProps) => {\n  return (\n    <MajorBox>\n      {icon ? <MajorBoxIcon src={icon} alt={icon} /> : null}\n      <MajorBoxTitle>{major}</MajorBoxTitle>\n      {cancelFunction ? (\n        <MajorBoxCloseBtn\n          className=\"chart-major-box-close\"\n          onClick={() => cancelFunction(major)}\n        >\n          <Emoji label=\"cancel\" emoji=\"❌\" />\n        </MajorBoxCloseBtn>\n      ) : null}\n    </MajorBox>\n  )\n}\n\nexport default ChartMajorBox\n","import styled from 'styled-components'\n\nexport const ChartMajorBoxes = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 90%;\n  transition: background-color 0.8s;\n\n  @media screen and (max-width: 750px) {\n    width: 95%;\n  }\n\n  @media screen and (max-width: 380px) {\n    width: 100%;\n  }\n`\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport { seoulCollege, globalCollege } from '../../config/colleges'\nimport updateMajorInput from '../../utils/updateMajorInput'\nimport searchMajor from '../../utils/searchMajor'\nimport ChartMajorBox from './ChartMajorBox'\nimport { ChartMajorBoxes } from '../../style/styledComponents/majorBoxes'\nimport {\n  InputSelect,\n  InputBtn,\n  InputBoxes,\n} from '../../style/styledComponents/input'\n\ntype ChartSearchCompareProps = {\n  campusName: string\n  majorData: MajorInfo[]\n  selectedInfo: MajorInfo[]\n  updateSelectedInfo: (action: string, info: MajorInfo) => void\n}\n\nconst ChartSearchCompare = ({\n  majorData,\n  updateSelectedInfo,\n  selectedInfo,\n  campusName,\n}: ChartSearchCompareProps) => {\n  const [collegeArr, setCollegeArr] = useState<string[]>([])\n  const [majorArr, setMajorArr] = useState<string[]>([])\n  const [input, setInput] = useState({\n    college: '',\n    major: '',\n  })\n\n  useEffect(() => {\n    if (campusName) {\n      campusName === 'seoul'\n        ? setCollegeArr(seoulCollege)\n        : setCollegeArr(globalCollege)\n    }\n  }, [campusName])\n\n  const handleMajorInput = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ): void => {\n    const { name, value } = event.target\n    setInput({ ...input, [name]: value })\n  }\n\n  const updateMajorArr = (value: string): void => {\n    setMajorArr(updateMajorInput(value, majorData))\n  }\n\n  const setSelectedInfo = () => {\n    const value = input.major\n    const selectedInfo = searchMajor(value, majorData)\n    updateSelectedInfo('set', selectedInfo as MajorInfo)\n    setInput({ college: '', major: '' })\n  }\n\n  const removeSelectedInfo = (major: string) => {\n    const selectedInfo = searchMajor(major, majorData)\n    updateSelectedInfo('remove', selectedInfo as MajorInfo)\n  }\n\n  return (\n    <div className=\"chart-search\">\n      <InputBoxes>\n        {/* 단과대 인풋 */}\n        <InputSelect>\n          <select\n            className=\"chart-input-select\"\n            name=\"college\"\n            value={input.college}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>): void => {\n              handleMajorInput(e)\n              updateMajorArr(e.target.value)\n            }}\n          >\n            <option value=\"\">단과대 선택</option>\n            {collegeArr.map((college: string, idx: number) => (\n              <option key={idx} value={college}>\n                {college}\n              </option>\n            ))}\n          </select>\n        </InputSelect>\n\n        {/* 학과 인풋 */}\n        <InputSelect>\n          <select\n            className=\"chart-input-select\"\n            name=\"major\"\n            value={input.major}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>): void =>\n              handleMajorInput(e)\n            }\n          >\n            <option value=\"\">학과선택</option>\n            {majorArr.map((major: string, idx: number) => (\n              <option key={idx} value={major}>\n                {major}\n              </option>\n            ))}\n          </select>\n        </InputSelect>\n        {input.major ? (\n          <InputBtn\n            className=\"chart-input-btn\"\n            onClick={() => {\n              setSelectedInfo()\n            }}\n          >\n            추가\n          </InputBtn>\n        ) : null}\n      </InputBoxes>\n      {/*학과 박스*/}\n      <ChartMajorBoxes>\n        {selectedInfo.map((major: MajorInfo, idx: number) => (\n          <ChartMajorBox\n            key={idx}\n            major={major.name}\n            cancelFunction={removeSelectedInfo}\n          />\n        ))}\n      </ChartMajorBoxes>\n    </div>\n  )\n}\n\nexport default ChartSearchCompare\n","import styled from 'styled-components'\n\nexport const BarChartWrap = styled.div`\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  background-color: #f7f7f7;\n  margin-top: 1rem;\n`\nexport const BarChartLegendWrap = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  justify-content: center;\n  @media screen and (max-width: 440px) {\n    flex-direction: column;\n  }\n`\n\nexport const BarChartLegend = styled.div`\n  margin-right: 1rem;\n  @media screen and (max-width: 750px) {\n    font-size: 0.8rem;\n  }\n\n  @media screen and (max-width: 420px) {\n    font-size: 0.6rem;\n    text-align: left;\n    margin-left: 1rem;\n  }\n`\nexport const LegendColorBox = styled.span`\n  background-color: ${props => props.color};\n  width: 12px;\n  height: 12px;\n  margin-right: 0.3rem;\n  display: inline-block;\n  margin-top: 1rem;\n`\n\nexport const ChartBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 1rem;\n`\n","import React, { useState } from 'react'\nimport { ChartData, ChartDirection } from '../../../@types/barChart'\nimport { InputBtn } from '../../style/styledComponents/input'\n\nimport {\n  BarChartWrap,\n  BarChartLegend,\n  BarChartLegendWrap,\n  LegendColorBox,\n  ChartBtn,\n} from '../../style/styledComponents/barChart'\n\nimport {\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  ComposedChart,\n  Line,\n} from 'recharts'\n\nexport const MajorChart = ({ direction, chart }: ChartData) => {\n  const [chartType, setChartType] = useState<boolean>(true)\n  return (\n    <BarChartWrap>\n      <BarChartLegendWrap>\n        {direction.map((bar: ChartDirection, idx: number) => (\n          <BarChartLegend key={idx}>\n            <LegendColorBox color={bar.color}></LegendColorBox>\n            <span>{bar.title}</span>\n          </BarChartLegend>\n        ))}\n      </BarChartLegendWrap>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <ComposedChart\n          data={chart}\n          margin={{ top: 30, right: 30, left: -20, bottom: 5 }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip isAnimationActive={false} />\n          {chartType\n            ? direction.map((bar: ChartDirection, barIdx: number) => (\n                <Bar key={barIdx} dataKey={bar.title} fill={bar.color} />\n              ))\n            : direction.map((line: ChartDirection, lineIdx: number) => (\n                <Line\n                  type=\"linear\"\n                  key={lineIdx}\n                  dataKey={line.title}\n                  stroke={line.color}\n                  strokeWidth={4}\n                  dot={{ strokeWidth: 6 }}\n                />\n              ))}\n        </ComposedChart>\n      </ResponsiveContainer>\n      <ChartBtn>\n        {direction.length > 0 ? (\n          <InputBtn onClick={() => setChartType(!chartType)}>\n            {chartType ? '꺾은선 그래프로 바꾸기' : '막대 그래프로 바꾸기'}\n          </InputBtn>\n        ) : null}\n      </ChartBtn>\n    </BarChartWrap>\n  )\n}\n\nexport const BaChart = ({ direction, chart }: ChartData) => {\n  return (\n    <BarChartWrap>\n      <BarChartLegendWrap>\n        {direction.map((bar: ChartDirection, idx: number) => (\n          <BarChartLegend key={idx}>\n            <LegendColorBox color={bar.color}></LegendColorBox>\n            <span>{bar.title}</span>\n          </BarChartLegend>\n        ))}\n      </BarChartLegendWrap>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <ComposedChart\n          data={chart}\n          margin={{ top: 30, right: 30, left: -20, bottom: 5 }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip isAnimationActive={false} />\n          <Bar dataKey=\"합격자\" stackId=\"a\" fill=\"#82ca9d\" />\n          <Bar dataKey=\"불합격자\" stackId=\"a\" fill=\"#FFC658\" />\n          <Line dataKey=\"응시자\" strokeWidth={3} stroke={'#8884D8'} />\n        </ComposedChart>\n      </ResponsiveContainer>\n    </BarChartWrap>\n  )\n}\n","export const semester: string[] = ['2018-2', '2019-1', '2019-2', '2020-1']\nexport const chartColor: string[] = ['#8884d8', '#82ca9d', '#ffc658']\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport { ChartData } from '../../../@types/barChart'\nimport { MajorChart, BaChart } from './WithVisualChart'\nimport { getMajorChartData, getBaChartData } from '../../utils/getChartData'\nimport { passPerAdmission, baParsingResult } from '../../../@types/baData'\n\ntype ChartVisualBarChartProps = {\n  selectedInfo: MajorInfo[] | passPerAdmission[]\n  chartType: string\n  globalBaData?: baParsingResult\n}\n\nconst ChartWithVisualChart = ({\n  selectedInfo,\n  chartType,\n}: ChartVisualBarChartProps) => {\n  const [chartData, setChartData] = useState<ChartData>({\n    direction: [],\n    chart: [],\n  })\n\n  useEffect(() => {\n    if (selectedInfo) {\n      const chartData =\n        chartType === 'major'\n          ? getMajorChartData(selectedInfo as MajorInfo[])\n          : getBaChartData(selectedInfo as passPerAdmission[])\n      setChartData(chartData)\n    }\n  }, [selectedInfo, chartType])\n\n  const { direction, chart } = chartData\n\n  return (\n    <>\n      {chartType === 'major' ? (\n        <MajorChart direction={direction} chart={chart} />\n      ) : (\n        <BaChart direction={direction} chart={chart} />\n      )}\n    </>\n  )\n}\n\nexport default ChartWithVisualChart\n","//* 선택된 데이터를 차트 컴포넌트가 요구하는 형식으로 바꾸는 함수\n\nimport { MajorInfo } from '../../@types/majorData'\nimport {\n  ChartData,\n  ChartDirection,\n  ChartSection,\n  baChartSection,\n} from '../../@types/barChart'\nimport { passPerAdmission } from '../../@types/baData'\nimport { semester, chartColor } from '../config/chart'\n\nconst chartValueValid = (value: number) => {\n  switch (value) {\n    case -1: {\n      return '데이터 없음'\n    }\n    case -2: {\n      return '제한 없음'\n    }\n    default: {\n      return value\n    }\n  }\n}\n\nexport const getBaChartData = (selectedInfo: passPerAdmission[]): ChartData => {\n  let chartSection: baChartSection[] = []\n  let direction: ChartDirection[] = [\n    { title: '응시자', color: '#8884D8' },\n    { title: '불합격자', color: '#FFC658' },\n    { title: '합격자', color: '#82ca9d' },\n  ]\n\n  selectedInfo.forEach((admissionInfo: passPerAdmission): void => {\n    const { id, admission, examPasser, examTaker } = admissionInfo\n    const newSection: baChartSection = {\n      id: id,\n      name: `${admission}학번`,\n      불합격자: examTaker - examPasser,\n      합격자: examPasser,\n      응시자: examTaker,\n    }\n    chartSection = [...chartSection, newSection as baChartSection]\n  })\n  const result: ChartData = { direction: direction, chart: chartSection }\n  return result\n}\n\nexport const getMajorChartData = (selectedInfo: MajorInfo[]): ChartData => {\n  let chartSection: ChartSection[] = []\n  let direction: ChartDirection[] = []\n\n  selectedInfo.forEach((major: MajorInfo, idx: number) => {\n    direction = [\n      ...direction,\n      { title: major.name, color: chartColor[idx] } as ChartDirection,\n    ]\n  })\n\n  semester.forEach((elem: string, idx: number) => {\n    chartSection = [...chartSection, { name: elem } as ChartSection]\n    selectedInfo.forEach((major: MajorInfo) => {\n      chartSection[idx][major.name] = chartValueValid(major.data[idx])\n    })\n  })\n\n  const result: ChartData = { direction: direction, chart: chartSection }\n  return result\n}\n","import React from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport styled from 'styled-components'\n\ntype ChartNoticeProps = {\n  selectedInfo: MajorInfo[] | string[]\n  majorNoticeType?: boolean\n}\n\nconst ChartNoticeBox = styled.div`\n  padding-top: 1rem;\n`\n\nconst ChartNoticeContent = styled.div`\n  margin-bottom: 1rem;\n  @media screen and (max-width: 750px) {\n    font-size: 0.8rem;\n  }\n\n  @media screen and (max-width: 420px) {\n    font-size: 0.7rem;\n  }\n`\n\nconst ChartNoticeTitle = styled.div`\n  background-color: #ececec;\n  padding: 0.1rem 0.5rem;\n  margin-right: 0.8rem;\n  font-weight: 700;\n  display: inline-block;\n  margin-bottom: 0.2rem;\n`\n\nconst ChartNoticeLine = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: #e2e2e2;\n  margin-top: 1rem;\n  border-radius: 50%;\n`\nconst ChartNoticeSection = styled.div`\n  margin-bottom: 0.2rem;\n  padding-left: 0.5rem;\n`\n\nconst ChartNotice = ({ selectedInfo, majorNoticeType }: ChartNoticeProps) => {\n  return (\n    <ChartNoticeBox>\n      {majorNoticeType ? (\n        <MajorChartNotice noticeResource={selectedInfo as MajorInfo[]} />\n      ) : (\n        <GeneralChartNotice noticeResource={selectedInfo as string[]} />\n      )}\n    </ChartNoticeBox>\n  )\n}\n\nconst MajorChartNotice = ({\n  noticeResource,\n}: {\n  noticeResource: MajorInfo[]\n}) => {\n  return (\n    <>\n      {noticeResource.map((major: MajorInfo, id: number) =>\n        major.notice ? (\n          <ChartNoticeContent key={id}>\n            <ChartNoticeTitle>{major.name} 지원 유의사항</ChartNoticeTitle>\n            <div>\n              {major.notice.split('&').map((notice: string, idx: number) => (\n                <ChartNoticeSection key={idx}>\n                  {idx + 1}. {notice}\n                </ChartNoticeSection>\n              ))}\n            </div>\n            <ChartNoticeLine />\n          </ChartNoticeContent>\n        ) : null,\n      )}\n    </>\n  )\n}\n\nconst GeneralChartNotice = ({\n  noticeResource,\n}: {\n  noticeResource: string[]\n}) => {\n  return (\n    <>\n      <ChartNoticeContent>\n        <ChartNoticeTitle>유의사항</ChartNoticeTitle>\n        <div>\n          {noticeResource.map((notice: string, idx: number) => (\n            <ChartNoticeSection key={idx}>\n              {idx + 1}. {notice}\n            </ChartNoticeSection>\n          ))}\n        </div>\n      </ChartNoticeContent>\n    </>\n  )\n}\n\nexport default ChartNotice\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport ChartTitle from '../chartResourceComponents/ChartTitle'\nimport ChartSearchCompare from '../chartResourceComponents/ChartSearchCompare'\nimport ChartWithVisualChart from '../chartResourceComponents/ChartWithVisualChart'\nimport ChartNotice from '../chartResourceComponents/ChartNotice'\n\ntype AllDataChartProps = {\n  majorData: MajorInfo[]\n  campusName: string\n}\n\nconst AllDataChart = ({ majorData, campusName }: AllDataChartProps) => {\n  const [selectedInfo, setSelctedInfo] = useState<MajorInfo[]>([])\n\n  useEffect(() => {\n    setSelctedInfo([])\n  }, [majorData])\n\n  const updateSelectedInfo = (action: string, info: MajorInfo) => {\n    if (action === 'set') {\n      selectedInfo.length < 3\n        ? setSelctedInfo([...selectedInfo, info])\n        : alert('학과는 3개까지 선택할 수 있습니다.')\n    } else {\n      setSelctedInfo(\n        [...selectedInfo].filter((major: MajorInfo) => major !== info),\n      )\n    }\n  }\n  return (\n    <>\n      <ChartTitle\n        title={'전체보기'}\n        subTitle={\n          '선택한 캠퍼스, 학번에 해당하는 이중전공 여석을 조회합니다(비교 학과는 3개까지 선택할 수 있습니다)'\n        }\n      />\n      <ChartSearchCompare\n        majorData={majorData}\n        campusName={campusName}\n        selectedInfo={selectedInfo}\n        updateSelectedInfo={updateSelectedInfo}\n      />\n      <ChartWithVisualChart selectedInfo={selectedInfo} chartType={'major'} />\n      <ChartNotice selectedInfo={selectedInfo} majorNoticeType={true} />\n    </>\n  )\n}\n\nexport default AllDataChart\n","import React from 'react'\nimport AllDataChart from '../chartComponents/AllDataChart'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducer'\nimport { State } from '../../../@types/reducer.d'\n\nconst AllDataChartContainer = () => {\n  const data: State = useSelector((state: RootState) => state.data)\n\n  return (\n    <AllDataChart\n      majorData={data.majorData.major}\n      campusName={data.campusName}\n    />\n  )\n}\n\nexport default AllDataChartContainer\n","export type ThemeInfo = {\n  name: string\n  icon: string | null\n}\n\nexport const seoulTheme: ThemeInfo[] = [\n  { name: '영어대학', icon: './images/english.png' },\n  { name: '프랑스어학부', icon: './images/france.png' },\n  { name: '스페인어과', icon: './images/spain.png' },\n  { name: '마인어과', icon: './images/indonesia.png' },\n  { name: '베트남어과', icon: './images/vietnam.png' },\n  { name: '중국어대', icon: './images/china.png' },\n  { name: '일본어대', icon: './images/japan.png' },\n  { name: '사과대', icon: './images/social.png' },\n  { name: '미디어커뮤니케이션학부', icon: './images/broad.png' },\n  { name: '상경대학', icon: './images/line.png' },\n  { name: '경영학전공', icon: './images/business.png' },\n  { name: 'LD/LT', icon: './images/ldlt.png' },\n  { name: '인기융합전공', icon: './images/converge.png' },\n  { name: '국제학부', icon: './images/inter.png' },\n]\n\nexport const globalTheme: ThemeInfo[] = [\n  { name: '영어통번역학부', icon: './images/trans.png' },\n  { name: '경상대학', icon: './images/bus.png' },\n  { name: '통계학과', icon: './images/statistics.png' },\n  { name: '인기융합전공', icon: '/.images/converge.png' },\n]\n\nexport const semesterTheme: ThemeInfo[] = [\n  { name: '2018-1', icon: null },\n  { name: '2018-2', icon: null },\n  { name: '2019-1', icon: null },\n  { name: '2019-2', icon: null },\n]\n","//* searchTheme함수 => theme을 입력하면 이 theme에 해당하는\nimport { MajorInfo } from '../../@types/majorData'\n\nconst searchTheme = (searchFor: string, majorArr: MajorInfo[]) => {\n  const result = majorArr.filter((elem: MajorInfo) => {\n    return elem.theme === searchFor\n  })\n\n  return result\n}\n\nexport default searchTheme\n","import React from 'react'\nimport ChartMajorBox from './ChartMajorBox'\nimport { ChartMajorBoxes } from '../../style/styledComponents/majorBoxes'\nimport { ThemeInfo } from '../../config/themes'\n\ntype WithSearchSelectProps = {\n  themeArr: ThemeInfo[]\n  callFunction: (name: string) => void\n  useIcon: boolean\n}\n\nconst WithSearchSelect = ({\n  themeArr,\n  callFunction,\n  useIcon,\n}: WithSearchSelectProps) => {\n  return (\n    <div className=\"chart-search\">\n      <ChartMajorBoxes>\n        {themeArr.map((theme: ThemeInfo, idx: number) => (\n          <span key={idx} onClick={() => callFunction(theme.name)}>\n            <ChartMajorBox\n              major={theme.name}\n              icon={useIcon ? theme.icon : null}\n            />\n          </span>\n        ))}\n      </ChartMajorBoxes>\n    </div>\n  )\n}\n\nexport default WithSearchSelect\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport { seoulTheme, globalTheme } from '../../config/themes'\nimport searchTheme from '../../utils/searchTheme'\nimport { ThemeInfo } from '../../config/themes'\nimport WithSearchSelect from './WithSearchSelect'\n\ntype ThemeWithSearchSelectProps = {\n  campusName: string\n  majorData: MajorInfo[]\n  updateSelectedThemeInfo: (themeInfo: MajorInfo[]) => void\n}\n\nconst ThemeWithSearchSelect = ({\n  campusName,\n  majorData,\n  updateSelectedThemeInfo,\n}: ThemeWithSearchSelectProps) => {\n  const [themeArr, setThemeArr] = useState<ThemeInfo[]>([])\n\n  useEffect(() => {\n    if (campusName) {\n      campusName === 'seoul'\n        ? setThemeArr(seoulTheme)\n        : setThemeArr(globalTheme)\n    }\n  }, [campusName])\n\n  const setSelectedThemeInfo = (theme: string) => {\n    const selectedThemeInfo = searchTheme(theme, majorData)\n    updateSelectedThemeInfo(selectedThemeInfo)\n  }\n\n  return (\n    <WithSearchSelect\n      useIcon={true}\n      themeArr={themeArr}\n      callFunction={setSelectedThemeInfo}\n    />\n  )\n}\n\nexport default ThemeWithSearchSelect\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport ChartTitle from '../chartResourceComponents/ChartTitle'\nimport ChartWithVisualChart from '../chartResourceComponents/ChartWithVisualChart'\nimport ChartNotice from '../chartResourceComponents/ChartNotice'\nimport ThemeWithSearchSelect from '../chartResourceComponents/ThemeWithSearchSelect'\n\ntype ThemeDataChartProps = {\n  majorData: MajorInfo[]\n  campusName: string\n}\n\nconst ThemeDataChart = ({ majorData, campusName }: ThemeDataChartProps) => {\n  const [selectedThemeInfo, setSelctedThemeInfo] = useState<MajorInfo[]>([])\n\n  useEffect(() => {\n    setSelctedThemeInfo([])\n  }, [majorData])\n\n  const updateSelectedThemeInfo = (themeInfo: MajorInfo[]) => {\n    setSelctedThemeInfo(themeInfo)\n  }\n\n  return (\n    <>\n      <ChartTitle\n        title={'테마보기'}\n        subTitle={\n          '캠퍼스별 자주 찾는 이중전공 변경 여석 데이터를 모아봤습니다. 테마를 선택해 주세요'\n        }\n      />\n      <ThemeWithSearchSelect\n        campusName={campusName}\n        majorData={majorData}\n        updateSelectedThemeInfo={updateSelectedThemeInfo}\n      />\n      <ChartWithVisualChart\n        selectedInfo={selectedThemeInfo}\n        chartType={'major'}\n      />\n      <ChartNotice selectedInfo={selectedThemeInfo} majorNoticeType={true} />\n    </>\n  )\n}\n\nexport default ThemeDataChart\n","import React from 'react'\nimport ThemeDataChart from '../chartComponents/ThemeDataChart'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducer'\nimport { State } from '../../../@types/reducer.d'\n\nconst ThemeDataChartContainer = () => {\n  const data: State = useSelector((state: RootState) => state.data)\n\n  return (\n    <ThemeDataChart\n      majorData={data.majorData.major}\n      campusName={data.campusName}\n    />\n  )\n}\n\nexport default ThemeDataChartContainer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducer'\nimport { State } from '../../../@types/reducer.d'\nimport styled from 'styled-components'\n\ntype AppLayoutContainerProps = {\n  header?: JSX.Element\n  allDataChart: JSX.Element\n  themeDataChart: JSX.Element\n  baDataChart: JSX.Element\n  defaultContent: JSX.Element\n}\n\nconst Content = styled.div`\n  padding-top: 7rem;\n  padding-bottom: 4rem;\n  width: inherit;\n  min-height: 80vh;\n  margin: 0 auto;\n  @media screen and (max-width: 750px) {\n    padding-top: 9rem;\n  }\n`\n\nconst Chart = styled.div`\n  margin-bottom: 1.5rem;\n  padding: 1rem;\n  border: 2px solid #f4f4f4;\n  border-radius: 20px;\n`\n\nconst AppLayoutContainer = ({\n  allDataChart,\n  themeDataChart,\n  defaultContent,\n  baDataChart,\n}: AppLayoutContainerProps) => {\n  const data: State = useSelector((state: RootState) => state.data)\n\n  return (\n    <Content>\n      {data.campusName ? (\n        <>\n          <Chart>{themeDataChart}</Chart>\n          <Chart>{allDataChart}</Chart>\n          <Chart>{baDataChart}</Chart>\n        </>\n      ) : (\n        <div className=\"default\">{defaultContent}</div>\n      )}\n    </Content>\n  )\n}\n\nexport default AppLayoutContainer\n","import React from 'react'\nimport styled from 'styled-components'\nimport Emoji from '../Emoji'\nimport { Introduce } from '../../config/introduce'\n\nconst CardWrap = styled.div`\n  text-align: center;\n  border-radius: 20px;\n  padding-top: 8rem;\n  padding-bottom: 3rem;\n`\n\nconst CardTitle = styled.div`\n  font-weight: 700;\n  margin-bottom: 2rem;\n  font-size: 1.2rem;\n  @media screen and (max-width: 750px) {\n    font-size: 0.9rem;\n  }\n  @media screen and (max-width: 380px) {\n    font-size: 0.7rem;\n  }\n`\n\nconst CardLogo = styled.div`\n  font-size: 5rem;\n  margin-bottom: 1rem;\n`\n\nconst CardContent = styled.div`\n  font-size: 0.8rem;\n  @media screen and (max-width: 750px) {\n    font-size: 0.6rem;\n  }\n\n  @media screen and (max-width: 360px) {\n    font-size: 0.5rem;\n  }\n`\n\nconst IntroduceCard = ({ title, emoji, contents }: Introduce) => {\n  return (\n    <CardWrap>\n      <CardLogo>\n        <Emoji label=\"intro\" emoji={emoji} />\n      </CardLogo>\n      <CardTitle>{title}</CardTitle>\n      {contents.map((content, idx) => (\n        <CardContent key={idx}>{content}</CardContent>\n      ))}\n    </CardWrap>\n  )\n}\n\nexport default IntroduceCard\n","export type Introduce = {\n  id: number\n  title: string\n  emoji: string\n  contents: string[]\n}\n\nexport const introduceArr: Introduce[] = [\n  {\n    id: 0,\n    title: '4학기 동안의 이중 변경 여석 데이터를 확인하세요',\n    emoji: '📈',\n    contents: [\n      '지금 당장 변경할 예정이 아니더라도, 확인해보세요!',\n      '4학기 동안의 추이를 바탕으로 다음학기 여석을 예상해볼 수 있습니다.',\n    ],\n  },\n  {\n    id: 1,\n    title: '이중전공 변경 데이터를 그래프로 쉽게 조회하세요',\n    emoji: '📊',\n    contents: [\n      '입력 학번과 캠퍼스에 해당하는 4학기 동안의 이중전공 변경 데이터를',\n      '막대그래프로 표현해 손쉽게 확인할 수 있습니다.',\n    ],\n  },\n  {\n    id: 2,\n    title: '유익한 데이터들도 같이 만나보세요',\n    emoji: '✨',\n    contents: [\n      '이중전공 지원 정보를 정리한 테이블과, 경영학과 이중변경/신청 시험',\n      '학번별 합격자 비율(추후 개발 예정) 역시 조회하실 수 있습니다.',\n    ],\n  },\n]\n","import React, { useState, useEffect } from 'react'\nimport IntroduceCards from './IntroduceCard'\nimport { introduceArr, Introduce } from '../../config/introduce'\nimport styled from 'styled-components'\n\nconst IntroduceCardsWrap = styled.div`\n  text-align: center;\n`\nconst NavigationDot = styled.span<{ checked: boolean }>`\n  margin-right: 1rem;\n  color: #002a48;\n  font-size: 2rem;\n  opacity: ${props => (props.checked ? 1 : 0.5)};\n  cursor: pointer;\n`\n\nconst DefaultContent = () => {\n  const [cardNum, setCardNum] = useState<number>(0)\n  const introduceLength = introduceArr.length\n\n  useEffect(() => {\n    let cardTimer = setInterval(() => setCardNum(num => num + 1), 5000)\n    return () => clearInterval(cardTimer)\n  }, [cardNum])\n\n  const updateCardNum = (idx: number) => {\n    setCardNum(idx)\n  }\n\n  const { id, title, emoji, contents }: Introduce = introduceArr[\n    cardNum % introduceLength\n  ]\n\n  return (\n    <IntroduceCardsWrap>\n      <IntroduceCards id={id} title={title} emoji={emoji} contents={contents} />\n      {introduceArr.map((card, idx) =>\n        idx === cardNum % introduceLength ? (\n          <NavigationDot key={idx} checked={true}>\n            ·\n          </NavigationDot>\n        ) : (\n          <NavigationDot\n            key={idx}\n            checked={false}\n            onClick={() => {\n              updateCardNum(idx)\n            }}\n          >\n            ·\n          </NavigationDot>\n        ),\n      )}\n    </IntroduceCardsWrap>\n  )\n}\n\nexport default DefaultContent\n","import React from 'react'\nimport { semesterTheme } from '../../config/themes'\nimport WithSearchSelect from './WithSearchSelect'\n\ntype BaWithSearchSelectProps = {\n  onGetBaDataByInput: (semester: string) => void\n}\n\nconst BaWithSearchSelect = ({\n  onGetBaDataByInput,\n}: BaWithSearchSelectProps) => {\n  const setSelectedSemester = (semester: string) => {\n    onGetBaDataByInput(semester)\n  }\n\n  return (\n    <WithSearchSelect\n      useIcon={true}\n      themeArr={semesterTheme}\n      callFunction={setSelectedSemester}\n    />\n  )\n}\n\nexport default BaWithSearchSelect\n","import React from 'react'\nimport { baParsingResult } from '../../../@types/baData'\nimport ChartWithVisualChart from '../chartResourceComponents/ChartWithVisualChart'\nimport { BarChartWrap } from '../../style/styledComponents/barChart'\nimport styled from 'styled-components'\n\ntype BaChartDetailProps = {\n  baData: baParsingResult\n}\n\nconst BaDetailContent = styled.div`\n  display: flex;\n  text-align: left;\n  justify-content: space-between;\n  margin: 0.5rem 0;\n`\n\nconst BaDetailContentPart = styled.div`\n  width: 25%;\n  text-align: center;\n`\n\nconst BaDetailPartTitle = styled.div`\n  @media screen and (max-width: 750px) {\n    font-size: 0.6rem;\n  }\n\n  @media screen and (max-width: 420px) {\n    font-size: 0.2rem;\n  }\n`\n\nconst BaDetailPartContent = styled.div`\n  font-size: 1.2rem;\n  font-weight: 700;\n  @media screen and (max-width: 750px) {\n    font-size: 0.7rem;\n  }\n  @media screen and (max-width: 420px) {\n    font-size: 0.2rem;\n  }\n`\n\nconst BaChartAndDetail = ({ baData }: BaChartDetailProps) => {\n  const {\n    semester,\n    passScore,\n    averageScore,\n    examPasser,\n    examTaker,\n    passPerAdmission,\n  } = baData\n  const passRatio = ((examPasser / examTaker) * 100).toFixed(1)\n\n  return (\n    <>\n      <ChartWithVisualChart selectedInfo={passPerAdmission} chartType={'ba'} />\n      {passPerAdmission ? (\n        <BarChartWrap>\n          <BaDetailContent>\n            <BaDetailContentPart>\n              <BaDetailPartTitle>선택학기</BaDetailPartTitle>\n              <BaDetailPartContent>{semester}</BaDetailPartContent>\n            </BaDetailContentPart>\n            <BaDetailContentPart>\n              <BaDetailPartTitle>합격점수</BaDetailPartTitle>\n              <BaDetailPartContent>{passScore}/60</BaDetailPartContent>\n            </BaDetailContentPart>\n            <BaDetailContentPart>\n              <BaDetailPartTitle>평균점수</BaDetailPartTitle>\n              <BaDetailPartContent>{averageScore}/60</BaDetailPartContent>\n            </BaDetailContentPart>\n            <BaDetailContentPart>\n              <BaDetailPartTitle>합격/응시</BaDetailPartTitle>\n              <BaDetailPartContent>\n                {examPasser}/{examTaker}명\n              </BaDetailPartContent>\n            </BaDetailContentPart>\n            <BaDetailContentPart>\n              <BaDetailPartTitle>합격률</BaDetailPartTitle>\n              <BaDetailPartContent>{passRatio}%</BaDetailPartContent>\n            </BaDetailContentPart>\n          </BaDetailContent>\n        </BarChartWrap>\n      ) : null}\n    </>\n  )\n}\n\nexport default BaChartAndDetail\n","const baNotices: string[] = [\n  '이중전공 변경, 신청, 후기이중전공 신청 응시자 데이터를 모두 합산했습니다.(해당 학기에 시험 응시한 학생 전부)',\n  '평균 점수는 소수점 둘째자리에서 반올림했습니다.',\n  '매년 1학기에는 이중전공 변경 신청자가 많고, 2학기에는 새내기분들의 이중전공 신청이 많습니다.',\n  '자세한 시험일정과 정보는 경영대학 홈페이지를 참조하세요.',\n]\n\nexport default baNotices\n","import React from 'react'\nimport ChartTitle from '../chartResourceComponents/ChartTitle'\nimport { baParsingResult } from '../../../@types/baData'\nimport BaWithSearchSelect from '../chartResourceComponents/BaWithSearchSelect'\nimport ChartNotice from '../chartResourceComponents/ChartNotice'\nimport BaChartAndDetail from '../chartResourceComponents/BaChartAndDetail'\nimport baNotice from '../../config/baNotice'\n\ntype BaDataChartProps = {\n  baData: baParsingResult\n  onGetBaDataByInput: (semester: string) => void\n}\n\nconst BaDataChart = ({ baData, onGetBaDataByInput }: BaDataChartProps) => {\n  return (\n    <>\n      <ChartTitle\n        title={'경영대학 이중 시험 정보'}\n        subTitle={\n          '4학기간의 경영대학 경영학전공 이중 필기 시험의 학번별 합격 통계를 조회합니다. 학기를 선택해 주세요.'\n        }\n      />\n      <BaWithSearchSelect onGetBaDataByInput={onGetBaDataByInput} />\n      <BaChartAndDetail baData={baData} />\n      <ChartNotice\n        selectedInfo={baNotice as string[]}\n        majorNoticeType={false}\n      />\n    </>\n  )\n}\n\nexport default BaDataChart\n","import React from 'react'\nimport BaDataChart from '../chartComponents/BaDataChart'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getBaDataByInput } from '../../reducer/data'\nimport { RootState } from '../../reducer'\nimport { State } from '../../../@types/reducer.d'\n\nconst BaDataChartContainer = () => {\n  const data: State = useSelector((state: RootState) => state.data)\n  const dispatch = useDispatch()\n\n  const onGetBaDataByInput = (semester: string): void => {\n    dispatch(getBaDataByInput(semester))\n  }\n\n  return (\n    <BaDataChart baData={data.baData} onGetBaDataByInput={onGetBaDataByInput} />\n  )\n}\n\nexport default BaDataChartContainer\n","import styled from 'styled-components'\n\nexport const FooterWrap = styled.div`\n  width: initial;\n  background-color: #f6f9fc;\n  padding: 2rem 0;\n  border-top: 1px solid #ededed;\n`\n\nexport const FooterContent = styled.div`\n  width: 80%;\n  margin: 0 auto;\n\n  @media screen and (max-width: 750px) {\n    width: 90%;\n  }\n\n  @media screen and (max-width: 360px) {\n    width: 95%;\n  }\n`\n\nexport const FooterIcons = styled.div`\n  display: flex;\n  margin-top: 0.6rem;\n`\n\nexport const FooterIcon = styled.div`\n  cursor: pointer;\n  margin-right: 0.8rem;\n  img {\n    width: 2.2rem;\n    height: auto;\n  }\n`\n\nexport const FooterCopyrigths = styled.div`\n  font-size: 0.5rem;\n  margin-top: 0.7rem;\n`\n\nexport const FooterIntroduce = styled.div`\n  font-size: 1.5rem;\n  font-family: Noto Sans KR;\n  font-weight: bold;\n  @media screen and (max-width: 420px) {\n    font-size: 1.2rem;\n  }\n`\n\nexport const FooterSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n  @media screen and (max-width: 380px) {\n    flex-direction: column;\n  }\n`\n\nexport const FooterIntroduceDetail = styled.div`\n  font-size: 0.8rem;\n  @media screen and (max-width: 420px) {\n    font-size: 0.7rem;\n  }\n`\n","import React from 'react'\nimport Emoji from '../Emoji'\nimport {\n  FooterCopyrigths,\n  FooterContent,\n  FooterIntroduce,\n  FooterSection,\n  FooterIcons,\n  FooterIcon,\n  FooterWrap,\n  FooterIntroduceDetail,\n} from './footerStyledComponents'\n\nconst Footer = () => {\n  return (\n    <FooterWrap>\n      <FooterContent>\n        <FooterIntroduce>\n          Developed by <Emoji label=\"max\" emoji=\"🧑🏻‍💻\" />\n          Max Kim\n        </FooterIntroduce>\n        <FooterIntroduceDetail>\n          <div>자바스크립트 개발자이자 융소를 이중하는 고학번입니다.</div>\n          <div>\n            서비스에 대한 피드백, 기타 제안은 하단 메일로 부탁드리겠습니다..!\n          </div>\n        </FooterIntroduceDetail>\n        <FooterSection>\n          <FooterIcons>\n            <FooterIcon>\n              <a href=\"https://github.com/MaxKim-J\">\n                <img\n                  src=\"https://img.icons8.com/color/144/000000/github-2.png\"\n                  alt=\"github\"\n                />\n              </a>\n            </FooterIcon>\n            <FooterIcon>\n              <a href=\"mailto:hwaseen@gmail.com\">\n                <img\n                  src=\"https://img.icons8.com/color/144/000000/gmail.png\"\n                  alt=\"gmail\"\n                />\n              </a>\n            </FooterIcon>\n            <FooterIcon>\n              <a href=\"https://maxkim-j.github.io/\">\n                <img\n                  src=\"https://img.icons8.com/color/150/000000/devpost.png\"\n                  alt=\"blog\"\n                />\n              </a>\n            </FooterIcon>\n          </FooterIcons>\n          <FooterCopyrigths>\n            <div>HUFS Second Major 1.2.0 © Max Kim. 2020</div>\n            <div>\n              Icons made by &nbsp;\n              <a\n                href=\"https://www.flaticon.com/authors/roundicons\"\n                title=\"Roundicons\"\n              >\n                Roundicons &nbsp;\n              </a>\n              from&nbsp;\n              <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n                www.flaticon.com\n              </a>\n            </div>\n          </FooterCopyrigths>\n        </FooterSection>\n      </FooterContent>\n    </FooterWrap>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport HeaderContainer from './components/container/HeaderContainer'\nimport AllDataChartContainer from './components/container/AllDataChartContainer'\nimport ThemeDataChartContainer from './components/container/ThemeDataChartContainer'\nimport AppLayoutContainer from './components/container/AppLayoutContainer'\nimport DefaultContent from './components/default/DefaultContent'\nimport BaDataChartContainer from './components/container/BaDataChartConatainer'\nimport Footer from './components/footer/Footer'\nimport '../src/style/font.css'\nimport '../src/style/global.css'\nimport styled from 'styled-components'\n\nconst AppWrap = styled.div`\n  width: 85%;\n  margin: 0 auto;\n\n  @media screen and (max-width: 770px) {\n    width: 90%;\n  }\n\n  @media screen and (max-width: 360px) {\n    width: 95%;\n  }\n`\n\nconst App = () => {\n  return (\n    <>\n      <HeaderContainer />\n      <AppWrap>\n        <AppLayoutContainer\n          allDataChart={<AllDataChartContainer />}\n          themeDataChart={<ThemeDataChartContainer />}\n          defaultContent={<DefaultContent />}\n          baDataChart={<BaDataChartContainer />}\n        />\n      </AppWrap>\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","import { combineReducers } from 'redux'\nimport data from './data'\n\nconst rootReducer = combineReducers({\n  data,\n})\n\nexport default rootReducer\nexport type RootState = ReturnType<typeof rootReducer>\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducer'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}