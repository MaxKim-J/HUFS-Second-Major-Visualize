{"version":3,"sources":["reducer/data sync /^/.//.*/.json$","style/styledComponents/input.ts","components/header/headerStyledComponents.ts","components/Emoji.tsx","components/header/HeaderArrow.tsx","components/header/Header.tsx","reducer/data.ts","config/admissions.ts","components/container/HeaderContainer.tsx","components/chartResourceComponents/ChartTitle.tsx","config/colleges.ts","utils/updateMajorInput.ts","utils/searchMajor.ts","components/chartResourceComponents/ChartMajorBox.tsx","style/styledComponents/majorBoxes.ts","components/chartResourceComponents/ChartSearchCompare.tsx","config/chart.ts","utils/getChartData.ts","components/chartResourceComponents/ChartVisualBarChart.tsx","components/chartResourceComponents/ChartNotice.tsx","components/chartComponents/AllDataChart.tsx","components/container/AllDataChartContainer.tsx","config/themes.ts","utils/searchTheme.ts","components/chartResourceComponents/ChartSearchSelect.tsx","components/chartComponents/ThemeDataChart.tsx","components/container/ThemeDataChartContainer.tsx","components/container/AppLayoutContainer.tsx","components/default/IntroduceCard.tsx","config/introduce.ts","components/default/DefaultContent.tsx","components/footer/footerStyledComponents.ts","components/footer/Footer.tsx","App.tsx","reducer/index.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","InputBtn","styled","div","InputSelect","span","InputBoxes","HeaderTitle","HeaderInputSelect","select","HeaderInputTitle","HeaderWrap","HeaderContent","Emoji","label","emoji","role","area-label","shakeEffectLarge","keyframes","shakeEffectSmall","HeaderArrowText","HeaderArrowContent","HeaderArrow","xmlns","x","y","width","height","viewBox","fill","transform","fill-rule","stroke","stroke-width","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-dasharray","stroke-dashoffset","font-family","font-weight","font-size","text-anchor","d","Header","admissionArr","onGetDataByInput","useState","showArrow","setShowArrow","admission","campusName","input","setInput","handleInput","event","target","name","value","className","onChange","onClick","initialState","majorData","reducer","state","action","type","payload","require","searchedTarget","find","elem","HeaderContainer","dispatch","useDispatch","getDataByInput","alert","ChartTitleContent","ChartSubTitleContent","ChartTitle","title","subTitle","seoulCollege","globalCollege","useMajorInput","college","majorArr","majors","filter","classify","console","log","searchMajor","searchFor","MajorBox","MajorBoxCloseBtn","MajorBoxTitle","ChartMajorBox","major","cancelFunction","ChartMajorBoxes","ChartSearchCompare","updateSelectedInfo","selectedInfo","collegeArr","setCollegeArr","setMajorArr","useEffect","handleMajorInput","removeSelectedInfo","updateMajorInput","setSelectedInfo","semester","chartColor","getMajorChartData","chartSection","direction","forEach","idx","color","chartValueValid","data","chart","BarChartWrap","BarChartLegendWrap","BarChartLegend","LegendColorBox","props","ChartVisualBarChart","chartData","setChartData","getChartData","bar","margin","top","right","left","bottom","barGap","strokeDasharray","dataKey","isAnimationActive","key","ChartNotice","notice","AllDataChart","setSelctedInfo","info","length","AllDataChartContainer","useSelector","seoulTheme","globalTheme","searchTheme","theme","ChartSearchSelect","updateSelectedThemeInfo","themeArr","setThemeArr","selectedThemeInfo","setSelectedThemeInfo","ThemeDataChart","setSelctedThemeInfo","themeInfo","ThemeDataChartContainer","Content","Chart","AppLayoutContainer","allDataChart","themeDataChart","defaultContent","CardWrap","CardTitle","CardLogo","CardContent","IntroduceCard","contents","content","introduceArr","IntroduceCardsWrap","NavigationDot","checked","DefaultContent","cardNum","setCardNum","cardTimer","setTimeout","clearTimeout","card","updateCardNum","FooterWrap","FooterContent","FooterIcons","FooterIcon","FooterCopyrigths","FooterIntroduce","FooterSection","FooterIntroduceDetail","Footer","href","src","alt","AppWrap","App","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a8bdac7.chunk.js","sourcesContent":["var map = {\n\t\"./global.json\": 188,\n\t\"./seoul.json\": 189\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 187;","import styled from 'styled-components'\n\nexport const InputBtn = styled.div`\n  cursor: pointer;\n  font-size: 0.8rem;\n  margin-top: 0.5rem;\n  background-color: #e2e2e2;\n  color: #002a48;\n  padding: 0.1rem 0.7rem;\n  border-radius: 10px;\n  font-weight: 700;\n  transition: background-color 1s, box-shadow 1s;\n  &:hover {\n    background-color: white;\n    box-shadow: -1px 14px 5px -8px rgba(0, 0, 0, 0.26);\n  }\n`\n\nexport const InputSelect = styled.span`\n  margin-right: 10px;\n  font-size: 1.3rem;\n`\nexport const InputBoxes = styled.div`\n  margin-bottom: 1rem;\n  display: flex;\n  align-content: center;\n  flex-wrap: wrap;\n  @media screen and (max-width: 750px) {\n    justify-content: center;\n  }\n`\n","import styled from 'styled-components'\n\nexport const HeaderTitle = styled.span`\n  font-size: 1.6rem;\n  font-family: Recko;\n  color: white;\n`\n\nexport const HeaderInputSelect = styled.select`\n  font-size: 0.8rem;\n`\n\nexport const HeaderInputTitle = styled.span`\n  margin-right: 0.3rem;\n  margin-top: 0.4rem;\n  font-weight: 700;\n  font-size: 1rem;\n  color: white;\n`\nexport const HeaderWrap = styled.div`\n  position: fixed;\n  padding-top: 2rem;\n  padding-bottom: 0.5rem;\n  width: 100%;\n  background: #002a48;\n  z-index: 999;\n`\nexport const HeaderContent = styled.div`\n  position: relative;\n  width: 80%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  @media screen and (max-width: 750px) {\n    width: 90%;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n  }\n\n  @media screen and (max-width: 360px) {\n    width: 95%;\n  }\n`\n\nexport const HeaderArrow = styled.div`\n  position: absolute;\n  z-index: 999;\n  top: 2rem;\n  right: 10px;\n`\n","import React from 'react'\n\ntype EmojiProps = {\n  label: string\n  emoji: string\n}\n\nconst Emoji = ({ label, emoji }: EmojiProps) => (\n  <span role=\"img\" area-label={label}>\n    {emoji}\n  </span>\n)\n\nexport default Emoji\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport Emoji from '../Emoji'\n\nconst shakeEffectLarge = keyframes`\n    0% {\n        top:5rem;\n    }\n    50%{\n        top:4rem;\n    }\n    100% {\n        top:5rem;\n    }\n`\n\nconst shakeEffectSmall = keyframes`\n    0% {\n        top:7rem;\n    }\n    50%{\n        top:6.1rem;\n    }\n    100% {\n        top:7rem;\n    }\n`\n\nconst HeaderArrowText = styled.div`\n  padding: 0.2rem 0.4rem;\n  font-weight: 700;\n`\n\nconst HeaderArrowContent = styled.div`\n  position: fixed;\n  top: 4rem;\n  animation: ${shakeEffectLarge} 1.7s ease infinite;\n  font-size: 0.8rem;\n  @media screen and (max-width: 750px) {\n    top: 6.1rem;\n    animation: ${shakeEffectSmall} 1.7s ease infinite;\n    font-size: 0.6rem;\n  }\n`\n\nconst HeaderArrow = () => {\n  return (\n    <HeaderArrowContent>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"40\"\n        height=\"40\"\n        viewBox=\"0 0 172 172\"\n        fill=\"#000000\"\n        transform=\"rotate(180)\"\n      >\n        <g\n          fill=\"none\"\n          fill-rule=\"nonzero\"\n          stroke=\"none\"\n          stroke-width=\"1\"\n          stroke-linecap=\"butt\"\n          stroke-linejoin=\"miter\"\n          stroke-miterlimit=\"10\"\n          stroke-dasharray=\"\"\n          stroke-dashoffset=\"0\"\n          font-family=\"none\"\n          font-weight=\"none\"\n          font-size=\"none\"\n          text-anchor=\"none\"\n        >\n          <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\n          <g fill=\"#ffffff\">\n            <path d=\"M40.90017,76.7335l40.033,40.033c2.80217,2.80217 7.33867,2.80217 10.13367,0l40.033,-40.033c4.515,-4.515 1.31867,-12.2335 -5.06683,-12.2335h-80.066c-6.3855,0 -9.58183,7.7185 -5.06683,12.2335z\"></path>\n          </g>\n        </g>\n      </svg>\n\n      <HeaderArrowText>\n        <Emoji label=\"hi\" emoji=\"😉\" />\n        학번, 캠퍼스 입력 후 시작!\n      </HeaderArrowText>\n    </HeaderArrowContent>\n  )\n}\n\nexport default HeaderArrow\n","import React, { useState } from 'react'\nimport {\n  InputBtn,\n  InputSelect,\n  InputBoxes,\n} from '../../style/styledComponents/input'\n\nimport {\n  HeaderWrap,\n  HeaderContent,\n  HeaderInputSelect,\n  HeaderInputTitle,\n  HeaderTitle,\n} from './headerStyledComponents'\n\nimport HeaderArrow from './HeaderArrow'\n\ntype headerProps = {\n  admissionArr: number[]\n  onGetDataByInput: (campusName: string, admission: number) => void\n}\n\nconst Header = ({ admissionArr, onGetDataByInput }: headerProps) => {\n  const [showArrow, setShowArrow] = useState(true)\n  const [input, setInput] = useState({\n    admission: 0,\n    campusName: '',\n  })\n\n  const handleInput = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    const { name, value } = event.target\n    setInput({ ...input, [name]: value })\n  }\n\n  return (\n    <HeaderWrap>\n      <HeaderContent>\n        <HeaderTitle>한국외대 이중전공 DB</HeaderTitle>\n        <InputBoxes>\n          <InputSelect>\n            <HeaderInputTitle>캠퍼스</HeaderInputTitle>\n            <HeaderInputSelect\n              className=\"header-input-select\"\n              name=\"campusName\"\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>): void =>\n                handleInput(e)\n              }\n            >\n              <option value=\"\">캠퍼스 선택</option>\n              <option value=\"seoul\">서울</option>\n              <option value=\"global\">글로벌</option>\n            </HeaderInputSelect>\n          </InputSelect>\n          <InputSelect>\n            <HeaderInputTitle>학번</HeaderInputTitle>\n            <HeaderInputSelect\n              className=\"header-input-select\"\n              name=\"admission\"\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>): void =>\n                handleInput(e)\n              }\n            >\n              <option value=\"\">학번 선택</option>\n              {admissionArr.map(admission => (\n                <option value={admission}>{admission}</option>\n              ))}\n            </HeaderInputSelect>\n          </InputSelect>\n          <InputBtn\n            onClick={() => {\n              const { campusName, admission } = input\n              onGetDataByInput(campusName, admission)\n              setShowArrow(false)\n            }}\n          >\n            시작하기\n            {showArrow ? <HeaderArrow /> : null}\n          </InputBtn>\n        </InputBoxes>\n      </HeaderContent>\n    </HeaderWrap>\n  )\n}\n\nexport default Header\n","//! 덕스타입 리덕스\nimport { State, Action } from '../../@types/reducer'\nimport { ParsingResult } from '../../@types/majorData'\n\n//todo 1. 액션 타입 정의\nconst GETDATABYINPUT = 'data/GETDATABYINPUT' as const\n\n//todo 2. 액션 생성함수 정의\nexport const getDataByInput = (campusName: string, admission: number) => ({\n  type: GETDATABYINPUT,\n  payload: {\n    campusName: campusName,\n    admission: admission,\n  },\n})\n\n//todo 3. 초기상태 정의\nconst initialState: State = {\n  majorData: {},\n  campusName: '',\n}\n\n//todo 4. 리듀서 작성(export default)\nconst reducer = (state: State = initialState, action: Action) => {\n  switch (action.type) {\n    //* 1. 헤더에 캠퍼스와 학번을 넣으면 store를 갱신함\n    case GETDATABYINPUT:\n      const { campusName, admission } = action.payload\n      const target = require(`./data/${campusName}.json`)\n      const searchedTarget: ParsingResult = target.find(\n        (elem: ParsingResult) => {\n          //! 여기 타입 왜이러지\n          return elem.admission == admission\n        },\n      )\n      return {\n        majorData: searchedTarget,\n        campusName: campusName,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","const admissionArr: number[] = [14, 15, 16, 17, 18, 19]\n\nexport default admissionArr\n","import React from 'react'\nimport Header from '../header/Header'\nimport { getDataByInput } from '../../reducer/data'\nimport { useDispatch } from 'react-redux'\nimport admissionArr from '../../config/admissions'\n\nconst HeaderContainer = () => {\n  const dispatch = useDispatch()\n\n  const onGetDataByInput = (campusName: string, admission: number): void => {\n    if (campusName && admission) {\n      dispatch(getDataByInput(campusName, admission))\n    } else {\n      alert('학번과 캠퍼스 모두 입력해주세요')\n    }\n  }\n\n  return (\n    <Header admissionArr={admissionArr} onGetDataByInput={onGetDataByInput} />\n  )\n}\n\nexport default HeaderContainer\n","import React from 'react'\nimport styled from 'styled-components'\n\ntype ChartTitleProps = {\n  title: string\n  subTitle?: string\n}\n\nconst ChartTitleContent = styled.div`\n  font-size: 1.6rem;\n  font-weight: 700;\n  margin-bottom: 0.7rem;\n`\nconst ChartSubTitleContent = styled.div`\n  margin-bottom: 1rem;\n`\n\nconst ChartTitle = ({ title, subTitle }: ChartTitleProps) => {\n  return (\n    <>\n      <ChartTitleContent>{title}</ChartTitleContent>\n      <ChartSubTitleContent>{subTitle}</ChartSubTitleContent>\n    </>\n  )\n}\n\nexport default ChartTitle\n","export const seoulCollege: string[] = [\n  '영어대학',\n  '서양어대학',\n  '아시아언어문화대학',\n  '중국어대학',\n  '일본어대학',\n  '사회과학대학',\n  '상경대학',\n  '사범대학',\n  '경영대학',\n  '국제학부',\n  'LD학부',\n  'LT학부',\n  '융합전공',\n]\n\nexport const globalCollege: string[] = [\n  '인문대학',\n  '통번역대학',\n  '동유럽학대학',\n  '국제지역대학',\n  '경상대학',\n  '바이오메디컬공학부',\n  '자연과학대학',\n  '공과대학',\n  '융합전공',\n]\n","import { MajorInfo } from '../../@types/majorData'\n\nconst useMajorInput = (college: string, majorArr: MajorInfo[]): string[] => {\n  const majors: MajorInfo[] = majorArr.filter(\n    (elem: MajorInfo) => elem.classify === college,\n  )\n  console.log(majors)\n  const result: string[] = majors.map((elem: MajorInfo) => elem.name)\n  return result\n}\n\nexport default useMajorInput\n","//* searchMajor 함수 == 인풋 : 학과명(string), majorInfo[] => 아웃풋: 학과명에 매치되는 majorInfo\nimport { MajorInfo } from '../../@types/majorData'\n\nconst searchMajor = (searchFor: string, majorArr: MajorInfo[]) => {\n  const result = majorArr.find((elem: MajorInfo) => {\n    return elem.name === searchFor\n  })\n\n  return result\n}\n\nexport default searchMajor\n","import React from 'react'\nimport styled from 'styled-components'\nimport Emoji from '../Emoji'\n\ntype ChartMajorBoxProps = {\n  major: string\n  emoji?: string\n  cancelFunction?: (major: string) => void\n}\n\nconst MajorBox = styled.span`\n  padding: 0.2rem 1rem;\n  background-color: #f6f9fc;\n  border-radius: 20px;\n  margin: 0 0.5rem 0.5rem 0;\n  font-size: 0.8rem;\n  display: block;\n  cursor: pointer;\n`\n\nconst MajorBoxCloseBtn = styled.span`\n  margin-left: 1rem;\n`\n\nconst MajorBoxTitle = styled.span`\n  font-size: 0.8rem;\n`\n\nconst ChartMajorBox = ({\n  major,\n  emoji,\n  cancelFunction,\n}: ChartMajorBoxProps) => {\n  return (\n    <MajorBox>\n      {emoji ? <Emoji label=\"logo\" emoji={emoji} /> : null}\n      <MajorBoxTitle>{major}</MajorBoxTitle>\n      {cancelFunction ? (\n        <MajorBoxCloseBtn\n          className=\"chart-major-box-close\"\n          onClick={() => cancelFunction(major)}\n        >\n          <Emoji label=\"cancel\" emoji=\"❌\" />\n        </MajorBoxCloseBtn>\n      ) : null}\n    </MajorBox>\n  )\n}\n\nexport default ChartMajorBox\n","import styled from 'styled-components'\n\nexport const ChartMajorBoxes = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 90%;\n\n  @media screen and (max-width: 750px) {\n    width: 95%;\n  }\n\n  @media screen and (max-width: 380px) {\n    width: 100%;\n  }\n`\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport { seoulCollege, globalCollege } from '../../config/colleges'\nimport updateMajorInput from '../../utils/updateMajorInput'\nimport searchMajor from '../../utils/searchMajor'\nimport ChartMajorBox from './ChartMajorBox'\nimport { ChartMajorBoxes } from '../../style/styledComponents/majorBoxes'\nimport {\n  InputSelect,\n  InputBtn,\n  InputBoxes,\n} from '../../style/styledComponents/input'\n\ntype ChartSearchCompareProps = {\n  campusName: string\n  majorData: MajorInfo[]\n  selectedInfo: MajorInfo[]\n  updateSelectedInfo: (action: string, info: MajorInfo) => void\n}\n\nconst ChartSearchCompare = ({\n  majorData,\n  updateSelectedInfo,\n  selectedInfo,\n  campusName,\n}: ChartSearchCompareProps) => {\n  const [collegeArr, setCollegeArr] = useState<string[]>([])\n  const [majorArr, setMajorArr] = useState<string[]>([])\n  const [input, setInput] = useState({\n    college: '',\n    major: '',\n  })\n\n  useEffect(() => {\n    if (campusName) {\n      campusName === 'seoul'\n        ? setCollegeArr(seoulCollege)\n        : setCollegeArr(globalCollege)\n    }\n  }, [campusName])\n\n  const handleMajorInput = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ): void => {\n    const { name, value } = event.target\n    setInput({ ...input, [name]: value })\n  }\n\n  const updateMajorArr = (value: string): void => {\n    setMajorArr(updateMajorInput(value, majorData))\n  }\n\n  const setSelectedInfo = () => {\n    const value = input.major\n    const selectedInfo = searchMajor(value, majorData)\n    updateSelectedInfo('set', selectedInfo as MajorInfo)\n    setInput({ college: '', major: '' })\n  }\n\n  const removeSelectedInfo = (major: string) => {\n    const selectedInfo = searchMajor(major, majorData)\n    updateSelectedInfo('remove', selectedInfo as MajorInfo)\n  }\n\n  return (\n    <div className=\"chart-search\">\n      <InputBoxes>\n        {/* 단과대 인풋 */}\n        <InputSelect>\n          <select\n            className=\"chart-input-select\"\n            name=\"college\"\n            value={input.college}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>): void => {\n              handleMajorInput(e)\n              updateMajorArr(e.target.value)\n            }}\n          >\n            <option value=\"\">단과대 선택</option>\n            {collegeArr.map((college: string) => (\n              <option value={college}>{college}</option>\n            ))}\n          </select>\n        </InputSelect>\n\n        {/* 학과 인풋 */}\n        <InputSelect>\n          <select\n            className=\"chart-input-select\"\n            name=\"major\"\n            value={input.major}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>): void =>\n              handleMajorInput(e)\n            }\n          >\n            <option value=\"\">학과선택</option>\n            {majorArr.map((major: string) => (\n              <option value={major}>{major}</option>\n            ))}\n          </select>\n        </InputSelect>\n        {input.major ? (\n          <InputBtn\n            className=\"chart-input-btn\"\n            onClick={() => {\n              setSelectedInfo()\n            }}\n          >\n            추가\n          </InputBtn>\n        ) : null}\n      </InputBoxes>\n      {/*학과 박스*/}\n      <ChartMajorBoxes>\n        {selectedInfo.map((major: MajorInfo) => (\n          <ChartMajorBox\n            major={major.name}\n            cancelFunction={removeSelectedInfo}\n          />\n        ))}\n      </ChartMajorBoxes>\n    </div>\n  )\n}\n\nexport default ChartSearchCompare\n","export const semester: string[] = ['2018-1', '2018-2', '2019-1', '2019-2']\nexport const chartColor: string[] = ['#8884d8', '#82ca9d', '#ffc658']\n","//* 선택된 전공 데이터를 차트 컴포넌트가 요구하는 형식으로 바꾸는 함수\n\nimport {\n  MajorInfo,\n  ChartData,\n  ChartSection,\n  ChartDirection,\n} from '../../@types/majorData'\nimport { semester, chartColor } from '../config/chart'\n\nconst chartValueValid = (value: number) => {\n  switch (value) {\n    case -1: {\n      return '데이터 없음'\n    }\n    case -2: {\n      return '제한 없음'\n    }\n    default: {\n      return value\n    }\n  }\n}\n\nconst getMajorChartData = (selectedInfo: MajorInfo[]): ChartData => {\n  let chartSection: ChartSection[] = []\n  let direction: ChartDirection[] = []\n\n  selectedInfo.forEach((major: MajorInfo, idx: number) => {\n    direction = [\n      ...direction,\n      { major: major.name, color: chartColor[idx] } as ChartDirection,\n    ]\n  })\n\n  semester.forEach((elem: string, idx: number) => {\n    chartSection = [...chartSection, { name: elem } as ChartSection]\n    selectedInfo.forEach((major: MajorInfo) => {\n      chartSection[idx][major.name] = chartValueValid(major.data[idx])\n    })\n  })\n\n  const result: ChartData = { direction: direction, chart: chartSection }\n  return result\n}\n\nexport default getMajorChartData\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo, ChartData, ChartDirection } from '../../../@types/majorData'\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts'\nimport getChartData from '../../utils/getChartData'\nimport styled from 'styled-components'\n\ntype ChartVisualBarChartProps = {\n  selectedInfo: MajorInfo[]\n}\n\nconst BarChartWrap = styled.div`\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  background-color: #f7f7f7;\n  margin-top: 1rem;\n`\nconst BarChartLegendWrap = styled.div`\n  margin-top: 1rem;\n`\n\nconst BarChartLegend = styled.span`\n  margin-right: 1rem;\n`\nconst LegendColorBox = styled.span`\n  background-color: ${props => props.color};\n  width: 12px;\n  height: 12px;\n  margin-right: 0.3rem;\n  display: inline-block;\n  margin-top: 1rem;\n`\n\nconst ChartVisualBarChart = ({ selectedInfo }: ChartVisualBarChartProps) => {\n  const [chartData, setChartData] = useState<ChartData>({\n    direction: [],\n    chart: [],\n  })\n\n  useEffect(() => {\n    setChartData(getChartData(selectedInfo))\n  }, [selectedInfo])\n\n  const { direction, chart } = chartData\n\n  return (\n    <BarChartWrap>\n      <BarChartLegendWrap>\n        {direction.map((bar: ChartDirection, idx: number) => (\n          <BarChartLegend>\n            <LegendColorBox color={bar.color}></LegendColorBox>\n            <span>{bar.major}</span>\n          </BarChartLegend>\n        ))}\n      </BarChartLegendWrap>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart\n          data={chart}\n          margin={{ top: 30, right: 30, left: -20, bottom: 20 }}\n          barGap={5}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip isAnimationActive={false} />\n          {direction.map((bar: ChartDirection, idx: number) => (\n            <Bar key={idx} dataKey={bar.major} fill={bar.color} />\n          ))}\n        </BarChart>\n      </ResponsiveContainer>\n    </BarChartWrap>\n  )\n}\n\nexport default ChartVisualBarChart\n","import React from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\n\ntype ChartNoticeProps = {\n  selectedInfo: MajorInfo[]\n}\n\nconst ChartNotice = ({ selectedInfo }: ChartNoticeProps) => {\n  return (\n    <div className=\"chart-notice\">\n      {selectedInfo.map((major: MajorInfo) =>\n        major.notice ? (\n          <div className=\"chart-notice-content\">\n            {major.name} 유의사항: {major.notice}\n          </div>\n        ) : null,\n      )}\n    </div>\n  )\n}\n\nexport default ChartNotice\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport ChartTitle from '../chartResourceComponents/ChartTitle'\nimport ChartSearchCompare from '../chartResourceComponents/ChartSearchCompare'\nimport ChartVisualBarChart from '../chartResourceComponents/ChartVisualBarChart'\nimport ChartNotice from '../chartResourceComponents/ChartNotice'\n\ntype AllDataChartProps = {\n  majorData: MajorInfo[]\n  campusName: string\n}\n\nconst AllDataChart = ({ majorData, campusName }: AllDataChartProps) => {\n  const [selectedInfo, setSelctedInfo] = useState<MajorInfo[]>([])\n\n  useEffect(() => {\n    setSelctedInfo([])\n  }, [majorData])\n\n  const updateSelectedInfo = (action: string, info: MajorInfo) => {\n    if (action === 'set') {\n      selectedInfo.length < 3\n        ? setSelctedInfo([...selectedInfo, info])\n        : alert('학과는 3개까지 선택할 수 있습니다.')\n    } else {\n      setSelctedInfo(\n        [...selectedInfo].filter((major: MajorInfo) => major !== info),\n      )\n    }\n  }\n  return (\n    <>\n      <ChartTitle\n        title={'전체보기'}\n        subTitle={\n          '선택한 캠퍼스, 학번에 해당하는 이중전공 여석을 조회합니다(비교 학과는 3개까지 선택할 수 있습니다)'\n        }\n      />\n      <ChartSearchCompare\n        majorData={majorData}\n        campusName={campusName}\n        selectedInfo={selectedInfo}\n        updateSelectedInfo={updateSelectedInfo}\n      />\n      <ChartVisualBarChart selectedInfo={selectedInfo} />\n      <ChartNotice selectedInfo={selectedInfo} />\n    </>\n  )\n}\n\nexport default AllDataChart\n","import React from 'react'\nimport AllDataChart from '../chartComponents/AllDataChart'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducer'\nimport { State } from '../../../@types/reducer.d'\n\nconst AllDataChartContainer = () => {\n  const data: State = useSelector((state: RootState) => state.data)\n\n  return (\n    <AllDataChart\n      majorData={data.majorData.major}\n      campusName={data.campusName}\n    />\n  )\n}\n\nexport default AllDataChartContainer\n","export type ThemeInfo = {\n  name: string\n  emoji: string\n}\n\nexport const seoulTheme: ThemeInfo[] = [\n  { name: '영어대', emoji: '🇺🇸' },\n  { name: '프랑스어학부', emoji: '🇫🇷' },\n  { name: '스페인어과', emoji: '🇪🇸' },\n  { name: '마인어과', emoji: '🇲🇾' },\n  { name: '베트남어과', emoji: '🇻🇳' },\n  { name: '중국어대', emoji: '🇨🇳' },\n  { name: '일본어대', emoji: '🇯🇵' },\n  { name: '사과대', emoji: '👥' },\n  { name: '미컴', emoji: '📸' },\n  { name: '상경계열', emoji: '📈' },\n  { name: 'LD/LT', emoji: '🌏' },\n  { name: '인기융합전공', emoji: '🔁' },\n  { name: '국제학부', emoji: '🇺🇳' },\n]\n\nexport const globalTheme: ThemeInfo[] = [\n  { name: '영통', emoji: '🗣' },\n  { name: '경상대', emoji: '💰' },\n  { name: '통계학과', emoji: '📊' },\n  { name: '인기융합전공', emoji: '🔁' },\n]\n","//* searchTheme함수 => theme을 입력하면 이 theme에 해당하는\nimport { MajorInfo } from '../../@types/majorData'\n\nconst searchTheme = (searchFor: string, majorArr: MajorInfo[]) => {\n  const result = majorArr.filter((elem: MajorInfo) => {\n    return elem.theme === searchFor\n  })\n\n  return result\n}\n\nexport default searchTheme\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport { seoulTheme, globalTheme } from '../../config/themes'\nimport ChartMajorBox from './ChartMajorBox'\nimport searchTheme from '../../utils/searchTheme'\nimport { ChartMajorBoxes } from '../../style/styledComponents/majorBoxes'\nimport { ThemeInfo } from '../../config/themes'\n\ntype ChartSearchSelectProps = {\n  campusName: string\n  majorData: MajorInfo[]\n  updateSelectedThemeInfo: (themeInfo: MajorInfo[]) => void\n}\n\nconst ChartSearchSelect = ({\n  campusName,\n  majorData,\n  updateSelectedThemeInfo,\n}: ChartSearchSelectProps) => {\n  const [themeArr, setThemeArr] = useState<ThemeInfo[]>([])\n\n  useEffect(() => {\n    if (campusName) {\n      campusName === 'seoul'\n        ? setThemeArr(seoulTheme)\n        : setThemeArr(globalTheme)\n    }\n  }, [campusName])\n\n  const setSelectedThemeInfo = (theme: string) => {\n    const selectedThemeInfo = searchTheme(theme, majorData)\n    updateSelectedThemeInfo(selectedThemeInfo)\n  }\n\n  return (\n    <div className=\"chart-search\">\n      <ChartMajorBoxes>\n        {themeArr.map((theme: ThemeInfo) => (\n          <span onClick={() => setSelectedThemeInfo(theme.name)}>\n            <ChartMajorBox major={theme.name} emoji={theme.emoji} />\n          </span>\n        ))}\n      </ChartMajorBoxes>\n    </div>\n  )\n}\n\nexport default ChartSearchSelect\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport ChartTitle from '../chartResourceComponents/ChartTitle'\nimport ChartVisualBarChart from '../chartResourceComponents/ChartVisualBarChart'\nimport ChartNotice from '../chartResourceComponents/ChartNotice'\nimport ChartSearchSelect from '../chartResourceComponents/ChartSearchSelect'\n\ntype ThemeDataChartProps = {\n  majorData: MajorInfo[]\n  campusName: string\n}\n\nconst ThemeDataChart = ({ majorData, campusName }: ThemeDataChartProps) => {\n  const [selectedThemeInfo, setSelctedThemeInfo] = useState<MajorInfo[]>([])\n\n  useEffect(() => {\n    setSelctedThemeInfo([])\n  }, [majorData])\n\n  const updateSelectedThemeInfo = (themeInfo: MajorInfo[]) => {\n    setSelctedThemeInfo(themeInfo)\n  }\n\n  return (\n    <>\n      <ChartTitle\n        title={'테마보기'}\n        subTitle={\n          '이중전공 데이터를 테마별로 모아봤습니다. 테마를 선택해 주세요'\n        }\n      />\n      <ChartSearchSelect\n        campusName={campusName}\n        majorData={majorData}\n        updateSelectedThemeInfo={updateSelectedThemeInfo}\n      />\n      <ChartVisualBarChart selectedInfo={selectedThemeInfo} />\n      <ChartNotice selectedInfo={selectedThemeInfo} />\n    </>\n  )\n}\n\nexport default ThemeDataChart\n","import React from 'react'\nimport ThemeDataChart from '../chartComponents/ThemeDataChart'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducer'\nimport { State } from '../../../@types/reducer.d'\n\nconst ThemeDataChartContainer = () => {\n  const data: State = useSelector((state: RootState) => state.data)\n\n  return (\n    <ThemeDataChart\n      majorData={data.majorData.major}\n      campusName={data.campusName}\n    />\n  )\n}\n\nexport default ThemeDataChartContainer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducer'\nimport { State } from '../../../@types/reducer.d'\nimport styled from 'styled-components'\n\ntype AppLayoutContainerProps = {\n  header?: JSX.Element\n  allDataChart: JSX.Element\n  themeDataChart: JSX.Element\n  defaultContent: JSX.Element\n}\n\nconst Content = styled.div`\n  padding-top: 7rem;\n  padding-bottom: 4rem;\n  width: inherit;\n  min-height: 80vh;\n  margin: 0 auto;\n  @media screen and (max-width: 750px) {\n    padding-top: 9rem;\n  }\n`\n\nconst Chart = styled.div`\n  margin-bottom: 1.5rem;\n  padding: 1rem;\n  border: 2px solid #f4f4f4;\n  border-radius: 20px;\n`\n\nconst AppLayoutContainer = ({\n  allDataChart,\n  themeDataChart,\n  defaultContent,\n}: AppLayoutContainerProps) => {\n  const data: State = useSelector((state: RootState) => state.data)\n\n  return (\n    <Content>\n      {data.campusName ? (\n        <>\n          <Chart>{themeDataChart}</Chart>\n          <Chart>{allDataChart}</Chart>\n        </>\n      ) : (\n        <div className=\"default\">{defaultContent}</div>\n      )}\n    </Content>\n  )\n}\n\nexport default AppLayoutContainer\n","import React from 'react'\nimport styled from 'styled-components'\nimport Emoji from '../Emoji'\nimport { Introduce } from '../../config/introduce'\n\nconst CardWrap = styled.div`\n  text-align: center;\n  border-radius: 20px;\n  padding-top: 8rem;\n  padding-bottom: 3rem;\n  transition: opacity 1s;\n`\n\nconst CardTitle = styled.div`\n  font-weight: 700;\n  margin-bottom: 2rem;\n  font-size: 1.2rem;\n  @media screen and (max-width: 750px) {\n    font-size: 0.9rem;\n  }\n`\n\nconst CardLogo = styled.div`\n  font-size: 5rem;\n  margin-bottom: 1rem;\n`\n\nconst CardContent = styled.div`\n  font-size: 0.8rem;\n  @media screen and (max-width: 750px) {\n    font-size: 0.6rem;\n  }\n\n  @media screen and (max-width: 360px) {\n    font-size: 0.5rem;\n  }\n`\n\nconst IntroduceCard = ({ title, emoji, contents }: Introduce) => {\n  return (\n    <CardWrap>\n      <CardLogo>\n        <Emoji label=\"intro\" emoji={emoji} />\n      </CardLogo>\n      <CardTitle>{title}</CardTitle>\n      {contents.map(content => (\n        <CardContent>{content}</CardContent>\n      ))}\n    </CardWrap>\n  )\n}\n\nexport default IntroduceCard\n","export type Introduce = {\n  id: number\n  title: string\n  emoji: string\n  contents: string[]\n}\n\nexport const introduceArr: Introduce[] = [\n  {\n    id: 0,\n    title: '4학기 동안의 이중 변경 여석 데이터를 확인하세요',\n    emoji: '📈',\n    contents: [\n      '지금 당장 변경할 예정이 아니더라도, 확인해보세요!',\n      '학기가 지날수록 여석이 늘어나고 있다면 다음 학기에도 여석이 추가될 가능성이 높습니다.',\n    ],\n  },\n  {\n    id: 1,\n    title: '이중전공 변경 데이터를 그래프로 쉽게 조회하세요',\n    emoji: '📊',\n    contents: [\n      '입력 학번과 캠퍼스에 해당하는 4학기 동안의 이중전공 변경 데이터를',\n      '막대그래프로 표현해 손쉽게 확인할 수 있습니다.',\n    ],\n  },\n  {\n    id: 2,\n    title: '유익한 데이터들도 같이 만나보세요',\n    emoji: '✨',\n    contents: [\n      '이중전공 지원 정보를 정리한 테이블과, 경영학과 이중변경/신청 시험',\n      '학번별 합격자 비율(추후 개발 예정) 역시 조회하실 수 있습니다.',\n    ],\n  },\n]\n","import React, { useState, useEffect } from 'react'\nimport IntroduceCards from './IntroduceCard'\nimport { introduceArr, Introduce } from '../../config/introduce'\nimport styled from 'styled-components'\n\nconst IntroduceCardsWrap = styled.div`\n  text-align: center;\n`\nconst NavigationDot = styled.span<{ checked: boolean }>`\n  margin-right: 1rem;\n  color: #002a48;\n  font-size: 2rem;\n  opacity: ${props => (props.checked ? 1 : 0.5)};\n  cursor: pointer;\n`\n\nconst DefaultContent = () => {\n  let [cardNum, setCardNum] = useState<number>(0)\n\n  useEffect(() => {\n    let cardTimer = setTimeout(() => setCardNum(cardNum + 1), 5000)\n    return () => clearTimeout(cardTimer)\n  })\n\n  const updateCardNum = (idx: number) => {\n    setCardNum(idx)\n  }\n\n  const { id, title, emoji, contents }: Introduce = introduceArr[cardNum % 3]\n\n  return (\n    <IntroduceCardsWrap>\n      <IntroduceCards id={id} title={title} emoji={emoji} contents={contents} />\n      {introduceArr.map((card, idx) =>\n        idx === cardNum % 3 ? (\n          <NavigationDot key={idx} checked={true}>\n            ·\n          </NavigationDot>\n        ) : (\n          <NavigationDot\n            key={idx}\n            checked={false}\n            onClick={() => {\n              updateCardNum(idx)\n            }}\n          >\n            ·\n          </NavigationDot>\n        ),\n      )}\n    </IntroduceCardsWrap>\n  )\n}\n\nexport default DefaultContent\n","import styled from 'styled-components'\n\nexport const FooterWrap = styled.div`\n  width: initial;\n  background-color: #f6f9fc;\n  padding: 2rem 0;\n  border-top: 1px solid #ededed;\n`\n\nexport const FooterContent = styled.div`\n  width: 80%;\n  margin: 0 auto;\n\n  @media screen and (max-width: 750px) {\n    width: 90%;\n  }\n\n  @media screen and (max-width: 360px) {\n    width: 95%;\n  }\n`\n\nexport const FooterIcons = styled.div`\n  display: flex;\n`\n\nexport const FooterIcon = styled.div`\n  cursor: pointer;\n  margin-right: 0.8rem;\n  img {\n    width: 2.2rem;\n    height: auto;\n  }\n`\n\nexport const FooterCopyrigths = styled.div`\n  font-size: 0.5rem;\n  margin-top: 0.7rem;\n`\n\nexport const FooterIntroduce = styled.div`\n  font-size: 1.5rem;\n  font-family: Noto Sans KR;\n  font-weight: bold;\n`\n\nexport const FooterSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n  @media screen and (max-width: 380px) {\n    flex-direction: column;\n  }\n`\n\nexport const FooterIntroduceDetail = styled.div`\n  font-size: 0.8rem;\n`\n","import React from 'react'\nimport Emoji from '../Emoji'\nimport {\n  FooterCopyrigths,\n  FooterContent,\n  FooterIntroduce,\n  FooterSection,\n  FooterIcons,\n  FooterIcon,\n  FooterWrap,\n  FooterIntroduceDetail,\n} from './footerStyledComponents'\n\nconst Footer = () => {\n  return (\n    <FooterWrap>\n      <FooterContent>\n        <FooterIntroduce>\n          Developed by <Emoji label=\"max\" emoji=\"🧑🏻‍💻\" />\n          Max Kim\n        </FooterIntroduce>\n        <FooterIntroduceDetail>\n          <div>자바스크립트 개발자이자 융소를 이중하는 고학번입니다.</div>\n          <div>\n            서비스에 대한 피드백, 기타 제안은 하단 메일로 부탁드리겠습니다..!\n          </div>\n        </FooterIntroduceDetail>\n        <FooterSection>\n          <FooterIcons>\n            <FooterIcon>\n              <a href=\"https://github.com/MaxKim-J\">\n                <img\n                  src=\"https://img.icons8.com/color/144/000000/github-2.png\"\n                  alt=\"github\"\n                />\n              </a>\n            </FooterIcon>\n            <FooterIcon>\n              <a href=\"mailto:hwaseen@gmail.com\">\n                <img\n                  src=\"https://img.icons8.com/color/144/000000/gmail.png\"\n                  alt=\"gmail\"\n                />\n              </a>\n            </FooterIcon>\n            <FooterIcon>\n              <a href=\"https://maxkim-j.github.io/\">\n                <img\n                  src=\"https://img.icons8.com/color/150/000000/devpost.png\"\n                  alt=\"blog\"\n                />\n              </a>\n            </FooterIcon>\n          </FooterIcons>\n          <FooterCopyrigths>\n            HUFS Second Major 1.0.0 © Max Kim. 2020\n          </FooterCopyrigths>\n        </FooterSection>\n      </FooterContent>\n    </FooterWrap>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport HeaderContainer from './components/container/HeaderContainer'\nimport AllDataChartContainer from './components/container/AllDataChartContainer'\nimport ThemeDataChartContainer from './components/container/ThemeDataChartContainer'\nimport AppLayoutContainer from './components/container/AppLayoutContainer'\nimport DefaultContent from './components/default/DefaultContent'\nimport Footer from './components/footer/Footer'\nimport '../src/style/font.css'\nimport '../src/style/global.css'\nimport styled from 'styled-components'\n\nconst AppWrap = styled.div`\n  width: 85%;\n  margin: 0 auto;\n\n  @media screen and (max-width: 770px) {\n    width: 90%;\n  }\n\n  @media screen and (max-width: 360px) {\n    width: 95%;\n  }\n`\n\nconst App = () => {\n  return (\n    <>\n      <HeaderContainer />\n      <AppWrap>\n        <AppLayoutContainer\n          allDataChart={<AllDataChartContainer />}\n          themeDataChart={<ThemeDataChartContainer />}\n          defaultContent={<DefaultContent />}\n        />\n      </AppWrap>\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","import { combineReducers } from 'redux'\nimport data from './data'\n\nconst rootReducer = combineReducers({\n  data,\n})\n\nexport default rootReducer\nexport type RootState = ReturnType<typeof rootReducer>\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducer'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}