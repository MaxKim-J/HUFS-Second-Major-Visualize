{"version":3,"sources":["reducer/data sync /^/.//.*/.json$","style/styledComponents/input.ts","components/header/headerStyledComponents.ts","components/Emoji.tsx","components/header/HeaderArrow.tsx","components/header/Header.tsx","reducer/data.ts","config/admissions.ts","components/container/HeaderContainer.tsx","components/chartResourceComponents/ChartTitle.tsx","config/colleges.ts","utils/updateMajorInput.ts","utils/searchMajor.ts","components/chartResourceComponents/ChartMajorBox.tsx","style/styledComponents/majorBoxes.ts","components/chartResourceComponents/ChartSearchCompare.tsx","config/chart.ts","utils/getChartData.ts","components/chartResourceComponents/ChartVisualBarChart.tsx","components/chartResourceComponents/ChartNotice.tsx","components/chartComponents/AllDataChart.tsx","components/container/AllDataChartContainer.tsx","config/themes.ts","utils/searchTheme.ts","components/chartResourceComponents/ChartSearchSelect.tsx","components/chartComponents/ThemeDataChart.tsx","components/container/ThemeDataChartContainer.tsx","components/container/AppLayoutContainer.tsx","components/default/IntroduceCard.tsx","config/introduce.ts","components/default/DefaultContent.tsx","components/footer/footerStyledComponents.ts","components/footer/Footer.tsx","App.tsx","reducer/index.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","InputBtn","styled","div","InputSelect","span","InputBoxes","HeaderTitle","HeaderInputSelect","select","HeaderInputTitle","HeaderWrap","HeaderContent","Emoji","label","emoji","role","area-label","shakeEffectLarge","keyframes","shakeEffectSmall","HeaderArrowText","HeaderArrowContent","HeaderArrow","Header","admissionArr","onGetDataByInput","showArrow","useState","admission","campusName","input","setInput","handleInput","event","target","name","value","onClick","window","location","reload","className","onChange","initialState","majorData","reducer","state","action","type","payload","require","searchedTarget","find","elem","HeaderContainer","setShowArrow","dispatch","useDispatch","getDataByInput","alert","ChartTitleContent","ChartSubTitleContent","ChartTitle","title","subTitle","seoulCollege","globalCollege","useMajorInput","college","majorArr","majors","filter","classify","console","log","searchMajor","searchFor","MajorBox","MajorBoxCloseBtn","MajorBoxTitle","MajorBoxIcon","img","ChartMajorBox","major","icon","cancelFunction","src","alt","ChartMajorBoxes","ChartSearchCompare","updateSelectedInfo","selectedInfo","collegeArr","setCollegeArr","setMajorArr","useEffect","handleMajorInput","removeSelectedInfo","updateMajorInput","setSelectedInfo","semester","chartColor","getMajorChartData","chartSection","direction","forEach","idx","color","chartValueValid","data","chart","BarChartWrap","BarChartLegendWrap","BarChartLegend","LegendColorBox","props","ChartBtn","ChartVisualBarChart","chartData","setChartData","chartType","setChartType","getChartData","bar","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","isAnimationActive","barIdx","key","fill","line","lineIdx","stroke","strokeWidth","dot","length","ChartNoticeBox","ChartNoticeContent","ChartNoticeTitle","ChartNoticeLine","ChartNoticeSection","ChartNotice","notice","split","AllDataChart","setSelctedInfo","info","AllDataChartContainer","useSelector","seoulTheme","globalTheme","searchTheme","theme","ChartSearchSelect","updateSelectedThemeInfo","themeArr","setThemeArr","selectedThemeInfo","setSelectedThemeInfo","ThemeDataChart","setSelctedThemeInfo","themeInfo","ThemeDataChartContainer","Content","Chart","AppLayoutContainer","allDataChart","themeDataChart","defaultContent","CardWrap","CardTitle","CardLogo","CardContent","IntroduceCard","contents","content","introduceArr","IntroduceCardsWrap","NavigationDot","checked","DefaultContent","cardNum","setCardNum","introduceLength","cardTimer","setInterval","num","clearInterval","card","updateCardNum","FooterWrap","FooterContent","FooterIcons","FooterIcon","FooterCopyrigths","FooterIntroduce","FooterSection","FooterIntroduceDetail","Footer","href","AppWrap","App","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d72d6a91.chunk.js","sourcesContent":["var map = {\n\t\"./global.json\": 184,\n\t\"./seoul.json\": 185\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 183;","import styled from 'styled-components'\n\nexport const InputBtn = styled.div`\n  cursor: pointer;\n  font-size: 0.8rem;\n  margin-top: 0.5rem;\n  background-color: #002a48;\n  color: white;\n  padding: 0.1rem 0.7rem;\n  border-radius: 10px;\n  font-weight: 700;\n  transition: background-color 0.6s, color 0.6s;\n  &:hover {\n    background-color: #e2e2e2;\n    color: #002a48;\n  }\n`\nexport const InputSelect = styled.span`\n  margin-right: 10px;\n  font-size: 1.3rem;\n`\nexport const InputBoxes = styled.div`\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-content: center;\n  flex-wrap: wrap;\n  @media screen and (max-width: 750px) {\n    justify-content: center;\n  }\n`\n","import styled from 'styled-components'\n\nexport const HeaderTitle = styled.span`\n  font-size: 1.5rem;\n  font-family: Recko;\n  color: white;\n  cursor: pointer;\n`\n\nexport const HeaderInputSelect = styled.select`\n  font-size: 0.8rem;\n`\n\nexport const HeaderInputTitle = styled.span`\n  margin-right: 0.3rem;\n  margin-top: 0.4rem;\n  font-size: 0.8rem;\n  color: white;\n`\nexport const HeaderWrap = styled.div`\n  position: fixed;\n  padding-top: 2rem;\n  padding-bottom: 0.5rem;\n  width: 100%;\n  background: #002a48;\n  z-index: 999;\n`\nexport const HeaderContent = styled.div`\n  position: relative;\n  width: 80%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  @media screen and (max-width: 750px) {\n    width: 90%;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n  }\n\n  @media screen and (max-width: 360px) {\n    width: 95%;\n  }\n`\n\nexport const HeaderArrow = styled.div`\n  position: absolute;\n  z-index: 999;\n  top: 2rem;\n  right: 10px;\n`\n","import React from 'react'\n\ntype EmojiProps = {\n  label: string\n  emoji: string\n}\n\nconst Emoji = ({ label, emoji }: EmojiProps) => (\n  <span role=\"img\" area-label={label}>\n    {emoji}\n  </span>\n)\n\nexport default Emoji\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport Emoji from '../Emoji'\n\nconst shakeEffectLarge = keyframes`\n    0% {\n        top:5rem;\n    }\n    50%{\n        top:4rem;\n    }\n    100% {\n        top:5rem;\n    }\n`\n\nconst shakeEffectSmall = keyframes`\n    0% {\n        top:7rem;\n    }\n    50%{\n        top:6.1rem;\n    }\n    100% {\n        top:7rem;\n    }\n`\n\nconst HeaderArrowText = styled.div`\n  padding: 0.2rem 0.4rem;\n  font-weight: 700;\n  color: #002a48;\n`\n\nconst HeaderArrowContent = styled.div`\n  margin-top: 2rem;\n  position: fixed;\n  top: 4rem;\n  -webkit-animation: ${shakeEffectLarge} 1.3s ease infinite;\n  font-size: 0.8rem;\n  @media screen and (max-width: 750px) {\n    top: 6.1rem;\n    animation: ${shakeEffectSmall} 1.3s ease infinite;\n    font-size: 0.6rem;\n  }\n`\n\nconst HeaderArrow = () => {\n  return (\n    <HeaderArrowContent>\n      <HeaderArrowText>\n        <Emoji label=\"hi\" emoji=\"⬆️\" />\n        학번, 캠퍼스 입력 후 시작!\n      </HeaderArrowText>\n    </HeaderArrowContent>\n  )\n}\n\nexport default HeaderArrow\n","import React, { useState } from 'react'\nimport {\n  InputBtn,\n  InputSelect,\n  InputBoxes,\n} from '../../style/styledComponents/input'\n\nimport {\n  HeaderWrap,\n  HeaderContent,\n  HeaderInputSelect,\n  HeaderInputTitle,\n  HeaderTitle,\n} from './headerStyledComponents'\n\nimport HeaderArrow from './HeaderArrow'\n\ntype headerProps = {\n  admissionArr: number[]\n  onGetDataByInput: (campusName: string, admission: number) => void\n  showArrow: Boolean\n}\n\nconst Header = ({ admissionArr, onGetDataByInput, showArrow }: headerProps) => {\n  const [input, setInput] = useState({\n    admission: 0,\n    campusName: '',\n  })\n\n  const handleInput = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    const { name, value } = event.target\n    setInput({ ...input, [name]: value })\n  }\n\n  return (\n    <HeaderWrap>\n      <HeaderContent>\n        <HeaderTitle onClick={() => window.location.reload()}>\n          한국외대 이중전공 DB\n        </HeaderTitle>\n        <InputBoxes>\n          <InputSelect>\n            <HeaderInputTitle>캠퍼스</HeaderInputTitle>\n            <HeaderInputSelect\n              className=\"header-input-select\"\n              name=\"campusName\"\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>): void =>\n                handleInput(e)\n              }\n            >\n              <option value=\"\">캠퍼스 선택</option>\n              <option value=\"seoul\">서울</option>\n              <option value=\"global\">글로벌</option>\n            </HeaderInputSelect>\n          </InputSelect>\n          <InputSelect>\n            <HeaderInputTitle>학번</HeaderInputTitle>\n            <HeaderInputSelect\n              className=\"header-input-select\"\n              name=\"admission\"\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>): void =>\n                handleInput(e)\n              }\n            >\n              <option value=\"\">학번 선택</option>\n              {admissionArr.map(admission => (\n                <option value={admission}>{admission}</option>\n              ))}\n            </HeaderInputSelect>\n          </InputSelect>\n          <InputBtn\n            onClick={() => {\n              const { campusName, admission } = input\n              onGetDataByInput(campusName, admission)\n            }}\n          >\n            시작\n            {showArrow ? <HeaderArrow /> : null}\n          </InputBtn>\n        </InputBoxes>\n      </HeaderContent>\n    </HeaderWrap>\n  )\n}\n\nexport default Header\n","//! 덕스타입 리덕스\nimport { State, Action } from '../../@types/reducer'\nimport { ParsingResult } from '../../@types/majorData'\n\n//todo 1. 액션 타입 정의\nconst GETDATABYINPUT = 'data/GETDATABYINPUT' as const\n\n//todo 2. 액션 생성함수 정의\nexport const getDataByInput = (campusName: string, admission: number) => ({\n  type: GETDATABYINPUT,\n  payload: {\n    campusName: campusName,\n    admission: admission,\n  },\n})\n\n//todo 3. 초기상태 정의\nconst initialState: State = {\n  majorData: {},\n  campusName: '',\n}\n\n//todo 4. 리듀서 작성(export default)\nconst reducer = (state: State = initialState, action: Action) => {\n  switch (action.type) {\n    //* 1. 헤더에 캠퍼스와 학번을 넣으면 store를 갱신함\n    case GETDATABYINPUT:\n      const { campusName, admission } = action.payload\n      const target = require(`./data/${campusName}.json`)\n      const searchedTarget: ParsingResult = target.find(\n        (elem: ParsingResult) => {\n          //! 여기 타입 왜이러지\n          return elem.admission == admission\n        },\n      )\n      return {\n        majorData: searchedTarget,\n        campusName: campusName,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","const admissionArr: number[] = [14, 15, 16, 17, 18, 19]\n\nexport default admissionArr\n","import React, { useState } from 'react'\nimport Header from '../header/Header'\nimport { getDataByInput } from '../../reducer/data'\nimport { useDispatch } from 'react-redux'\nimport admissionArr from '../../config/admissions'\n\nconst HeaderContainer = () => {\n  const [showArrow, setShowArrow] = useState(true)\n  const dispatch = useDispatch()\n\n  const onGetDataByInput = (campusName: string, admission: number): void => {\n    if (campusName && admission) {\n      dispatch(getDataByInput(campusName, admission))\n      setShowArrow(false)\n    } else {\n      alert('학번과 캠퍼스 모두 입력해주세요')\n    }\n  }\n\n  return (\n    <Header\n      admissionArr={admissionArr}\n      onGetDataByInput={onGetDataByInput}\n      showArrow={showArrow}\n    />\n  )\n}\n\nexport default HeaderContainer\n","import React from 'react'\nimport styled from 'styled-components'\n\ntype ChartTitleProps = {\n  title: string\n  subTitle?: string\n}\n\nconst ChartTitleContent = styled.div`\n  font-size: 1.6rem;\n  font-weight: 700;\n  margin-bottom: 0.7rem;\n`\nconst ChartSubTitleContent = styled.div`\n  margin-bottom: 1rem;\n`\n\nconst ChartTitle = ({ title, subTitle }: ChartTitleProps) => {\n  return (\n    <>\n      <ChartTitleContent>{title}</ChartTitleContent>\n      <ChartSubTitleContent>{subTitle}</ChartSubTitleContent>\n    </>\n  )\n}\n\nexport default ChartTitle\n","export const seoulCollege: string[] = [\n  '영어대학',\n  '서양어대학',\n  '아시아언어문화대학',\n  '중국어대학',\n  '일본어대학',\n  '사회과학대학',\n  '상경대학',\n  '사범대학',\n  '경영대학',\n  '국제학부',\n  'LD학부',\n  'LT학부',\n  '융합전공',\n]\n\nexport const globalCollege: string[] = [\n  '인문대학',\n  '통번역대학',\n  '동유럽학대학',\n  '국제지역대학',\n  '경상대학',\n  '바이오메디컬공학부',\n  '자연과학대학',\n  '공과대학',\n  '융합전공',\n]\n","import { MajorInfo } from '../../@types/majorData'\n\nconst useMajorInput = (college: string, majorArr: MajorInfo[]): string[] => {\n  const majors: MajorInfo[] = majorArr.filter(\n    (elem: MajorInfo) => elem.classify === college,\n  )\n  console.log(majors)\n  const result: string[] = majors.map((elem: MajorInfo) => elem.name)\n  return result\n}\n\nexport default useMajorInput\n","//* searchMajor 함수 == 인풋 : 학과명(string), majorInfo[] => 아웃풋: 학과명에 매치되는 majorInfo\nimport { MajorInfo } from '../../@types/majorData'\n\nconst searchMajor = (searchFor: string, majorArr: MajorInfo[]) => {\n  const result = majorArr.find((elem: MajorInfo) => {\n    return elem.name === searchFor\n  })\n\n  return result\n}\n\nexport default searchMajor\n","import React from 'react'\nimport styled from 'styled-components'\nimport Emoji from '../Emoji'\n\ntype ChartMajorBoxProps = {\n  major: string\n  icon?: string\n  cancelFunction?: (major: string) => void\n}\n\nconst MajorBox = styled.span`\n  padding: 0.2rem 1rem;\n  background-color: #f6f9fc;\n  border-radius: 20px;\n  margin: 0 0.5rem 0.5rem 0;\n  font-size: 0.8rem;\n  display: flex;\n  cursor: pointer;\n  transition: background-color 0.5s;\n  &:hover {\n    background-color: #d0d9e2;\n  }\n`\n\nconst MajorBoxCloseBtn = styled.div`\n  margin-left: 1rem;\n`\n\nconst MajorBoxTitle = styled.div`\n  font-size: 0.8rem;\n`\n\nconst MajorBoxIcon = styled.img`\n  width: 1rem;\n  height: 1rem;\n  margin-right: 0.3rem;\n  margin-top: 0.1rem;\n`\n\nconst ChartMajorBox = ({ major, icon, cancelFunction }: ChartMajorBoxProps) => {\n  return (\n    <MajorBox>\n      {icon ? <MajorBoxIcon src={icon} alt={icon} /> : null}\n      <MajorBoxTitle>{major}</MajorBoxTitle>\n      {cancelFunction ? (\n        <MajorBoxCloseBtn\n          className=\"chart-major-box-close\"\n          onClick={() => cancelFunction(major)}\n        >\n          <Emoji label=\"cancel\" emoji=\"❌\" />\n        </MajorBoxCloseBtn>\n      ) : null}\n    </MajorBox>\n  )\n}\n\nexport default ChartMajorBox\n","import styled from 'styled-components'\n\nexport const ChartMajorBoxes = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 90%;\n  transition: background-color 0.8s;\n\n  @media screen and (max-width: 750px) {\n    width: 95%;\n  }\n\n  @media screen and (max-width: 380px) {\n    width: 100%;\n  }\n`\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport { seoulCollege, globalCollege } from '../../config/colleges'\nimport updateMajorInput from '../../utils/updateMajorInput'\nimport searchMajor from '../../utils/searchMajor'\nimport ChartMajorBox from './ChartMajorBox'\nimport { ChartMajorBoxes } from '../../style/styledComponents/majorBoxes'\nimport {\n  InputSelect,\n  InputBtn,\n  InputBoxes,\n} from '../../style/styledComponents/input'\n\ntype ChartSearchCompareProps = {\n  campusName: string\n  majorData: MajorInfo[]\n  selectedInfo: MajorInfo[]\n  updateSelectedInfo: (action: string, info: MajorInfo) => void\n}\n\nconst ChartSearchCompare = ({\n  majorData,\n  updateSelectedInfo,\n  selectedInfo,\n  campusName,\n}: ChartSearchCompareProps) => {\n  const [collegeArr, setCollegeArr] = useState<string[]>([])\n  const [majorArr, setMajorArr] = useState<string[]>([])\n  const [input, setInput] = useState({\n    college: '',\n    major: '',\n  })\n\n  useEffect(() => {\n    if (campusName) {\n      campusName === 'seoul'\n        ? setCollegeArr(seoulCollege)\n        : setCollegeArr(globalCollege)\n    }\n  }, [campusName])\n\n  const handleMajorInput = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ): void => {\n    const { name, value } = event.target\n    setInput({ ...input, [name]: value })\n  }\n\n  const updateMajorArr = (value: string): void => {\n    setMajorArr(updateMajorInput(value, majorData))\n  }\n\n  const setSelectedInfo = () => {\n    const value = input.major\n    const selectedInfo = searchMajor(value, majorData)\n    updateSelectedInfo('set', selectedInfo as MajorInfo)\n    setInput({ college: '', major: '' })\n  }\n\n  const removeSelectedInfo = (major: string) => {\n    const selectedInfo = searchMajor(major, majorData)\n    updateSelectedInfo('remove', selectedInfo as MajorInfo)\n  }\n\n  return (\n    <div className=\"chart-search\">\n      <InputBoxes>\n        {/* 단과대 인풋 */}\n        <InputSelect>\n          <select\n            className=\"chart-input-select\"\n            name=\"college\"\n            value={input.college}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>): void => {\n              handleMajorInput(e)\n              updateMajorArr(e.target.value)\n            }}\n          >\n            <option value=\"\">단과대 선택</option>\n            {collegeArr.map((college: string) => (\n              <option value={college}>{college}</option>\n            ))}\n          </select>\n        </InputSelect>\n\n        {/* 학과 인풋 */}\n        <InputSelect>\n          <select\n            className=\"chart-input-select\"\n            name=\"major\"\n            value={input.major}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>): void =>\n              handleMajorInput(e)\n            }\n          >\n            <option value=\"\">학과선택</option>\n            {majorArr.map((major: string) => (\n              <option value={major}>{major}</option>\n            ))}\n          </select>\n        </InputSelect>\n        {input.major ? (\n          <InputBtn\n            className=\"chart-input-btn\"\n            onClick={() => {\n              setSelectedInfo()\n            }}\n          >\n            추가\n          </InputBtn>\n        ) : null}\n      </InputBoxes>\n      {/*학과 박스*/}\n      <ChartMajorBoxes>\n        {selectedInfo.map((major: MajorInfo) => (\n          <ChartMajorBox\n            major={major.name}\n            cancelFunction={removeSelectedInfo}\n          />\n        ))}\n      </ChartMajorBoxes>\n    </div>\n  )\n}\n\nexport default ChartSearchCompare\n","export const semester: string[] = ['2018-2', '2019-1', '2019-2', '2020-1']\nexport const chartColor: string[] = ['#8884d8', '#82ca9d', '#ffc658']\n","//* 선택된 전공 데이터를 차트 컴포넌트가 요구하는 형식으로 바꾸는 함수\n\nimport {\n  MajorInfo,\n  ChartData,\n  ChartSection,\n  ChartDirection,\n} from '../../@types/majorData'\nimport { semester, chartColor } from '../config/chart'\n\nconst chartValueValid = (value: number) => {\n  switch (value) {\n    case -1: {\n      return '데이터 없음'\n    }\n    case -2: {\n      return '제한 없음'\n    }\n    default: {\n      return value\n    }\n  }\n}\n\nconst getMajorChartData = (selectedInfo: MajorInfo[]): ChartData => {\n  let chartSection: ChartSection[] = []\n  let direction: ChartDirection[] = []\n\n  selectedInfo.forEach((major: MajorInfo, idx: number) => {\n    direction = [\n      ...direction,\n      { major: major.name, color: chartColor[idx] } as ChartDirection,\n    ]\n  })\n\n  semester.forEach((elem: string, idx: number) => {\n    chartSection = [...chartSection, { name: elem } as ChartSection]\n    selectedInfo.forEach((major: MajorInfo) => {\n      chartSection[idx][major.name] = chartValueValid(major.data[idx])\n    })\n  })\n\n  const result: ChartData = { direction: direction, chart: chartSection }\n  return result\n}\n\nexport default getMajorChartData\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo, ChartData, ChartDirection } from '../../../@types/majorData'\nimport {\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  ComposedChart,\n  Line,\n} from 'recharts'\nimport getChartData from '../../utils/getChartData'\nimport styled from 'styled-components'\nimport { InputBtn } from '../../style/styledComponents/input'\n\ntype ChartVisualBarChartProps = {\n  selectedInfo: MajorInfo[]\n}\n\nconst BarChartWrap = styled.div`\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  background-color: #f7f7f7;\n  margin-top: 1rem;\n`\nconst BarChartLegendWrap = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  justify-content: center;\n  @media screen and (max-width: 440px) {\n    flex-direction: column;\n    justify-content: flex-start;\n  }\n`\n\nconst BarChartLegend = styled.div`\n  margin-right: 1rem;\n  @media screen and (max-width: 750px) {\n    font-size: 0.8rem;\n  }\n\n  @media screen and (max-width: 420px) {\n    font-size: 0.6rem;\n  }\n`\nconst LegendColorBox = styled.span`\n  background-color: ${props => props.color};\n  width: 12px;\n  height: 12px;\n  margin-right: 0.3rem;\n  display: inline-block;\n  margin-top: 1rem;\n`\n\nconst ChartBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 1rem;\n`\n\nconst ChartVisualBarChart = ({ selectedInfo }: ChartVisualBarChartProps) => {\n  const [chartData, setChartData] = useState<ChartData>({\n    direction: [],\n    chart: [],\n  })\n  const [chartType, setChartType] = useState<boolean>(true)\n\n  useEffect(() => {\n    setChartData(getChartData(selectedInfo))\n  }, [selectedInfo])\n\n  const { direction, chart } = chartData\n\n  return (\n    <BarChartWrap>\n      <BarChartLegendWrap>\n        {direction.map((bar: ChartDirection, idx: number) => (\n          <BarChartLegend>\n            <LegendColorBox color={bar.color}></LegendColorBox>\n            <span>{bar.major}</span>\n          </BarChartLegend>\n        ))}\n      </BarChartLegendWrap>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <ComposedChart\n          data={chart}\n          margin={{ top: 30, right: 30, left: -20, bottom: 5 }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip isAnimationActive={false} />\n          {chartType\n            ? direction.map((bar: ChartDirection, barIdx: number) => (\n                <Bar key={barIdx} dataKey={bar.major} fill={bar.color} />\n              ))\n            : direction.map((line: ChartDirection, lineIdx: number) => (\n                <Line\n                  type=\"linear\"\n                  key={lineIdx}\n                  dataKey={line.major}\n                  stroke={line.color}\n                  strokeWidth={4}\n                  dot={{ strokeWidth: 6 }}\n                />\n              ))}\n        </ComposedChart>\n      </ResponsiveContainer>\n      <ChartBtn>\n        {direction.length > 0 ? (\n          <InputBtn onClick={() => setChartType(!chartType)}>\n            {chartType ? '꺾은선 그래프로 바꾸기' : '막대 그래프로 바꾸기'}\n          </InputBtn>\n        ) : null}\n      </ChartBtn>\n    </BarChartWrap>\n  )\n}\n\nexport default ChartVisualBarChart\n","import React from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport styled from 'styled-components'\n\ntype ChartNoticeProps = {\n  selectedInfo: MajorInfo[]\n}\n\nconst ChartNoticeBox = styled.div`\n  padding-top: 1rem;\n`\n\nconst ChartNoticeContent = styled.div`\n  margin-bottom: 1rem;\n  @media screen and (max-width: 750px) {\n    font-size: 0.8rem;\n  }\n\n  @media screen and (max-width: 420px) {\n    font-size: 0.7rem;\n  }\n`\n\nconst ChartNoticeTitle = styled.div`\n  background-color: #ececec;\n  padding: 0.1rem 0.5rem;\n  margin-right: 0.8rem;\n  font-weight: 700;\n  display: inline-block;\n  margin-bottom: 0.2rem;\n`\n\nconst ChartNoticeLine = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: #e2e2e2;\n  margin-top: 1rem;\n  border-radius: 50%;\n`\nconst ChartNoticeSection = styled.div`\n  margin-bottom: 0.2rem;\n  padding-left: 0.5rem;\n`\n\nconst ChartNotice = ({ selectedInfo }: ChartNoticeProps) => {\n  return (\n    <ChartNoticeBox>\n      {selectedInfo.map((major: MajorInfo, id: number) =>\n        major.notice ? (\n          <ChartNoticeContent key={id}>\n            <ChartNoticeTitle>{major.name} 지원 유의사항</ChartNoticeTitle>\n            <div>\n              {major.notice.split('&').map((notice: string, idx: number) => (\n                <ChartNoticeSection key={idx}>\n                  {idx + 1}. {notice}\n                </ChartNoticeSection>\n              ))}\n            </div>\n            <ChartNoticeLine />\n          </ChartNoticeContent>\n        ) : null,\n      )}\n    </ChartNoticeBox>\n  )\n}\n\nexport default ChartNotice\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport ChartTitle from '../chartResourceComponents/ChartTitle'\nimport ChartSearchCompare from '../chartResourceComponents/ChartSearchCompare'\nimport ChartVisualBarChart from '../chartResourceComponents/ChartVisualBarChart'\nimport ChartNotice from '../chartResourceComponents/ChartNotice'\n\ntype AllDataChartProps = {\n  majorData: MajorInfo[]\n  campusName: string\n}\n\nconst AllDataChart = ({ majorData, campusName }: AllDataChartProps) => {\n  const [selectedInfo, setSelctedInfo] = useState<MajorInfo[]>([])\n\n  useEffect(() => {\n    setSelctedInfo([])\n  }, [majorData])\n\n  const updateSelectedInfo = (action: string, info: MajorInfo) => {\n    if (action === 'set') {\n      selectedInfo.length < 3\n        ? setSelctedInfo([...selectedInfo, info])\n        : alert('학과는 3개까지 선택할 수 있습니다.')\n    } else {\n      setSelctedInfo(\n        [...selectedInfo].filter((major: MajorInfo) => major !== info),\n      )\n    }\n  }\n  return (\n    <>\n      <ChartTitle\n        title={'전체보기'}\n        subTitle={\n          '선택한 캠퍼스, 학번에 해당하는 이중전공 여석을 조회합니다(비교 학과는 3개까지 선택할 수 있습니다)'\n        }\n      />\n      <ChartSearchCompare\n        majorData={majorData}\n        campusName={campusName}\n        selectedInfo={selectedInfo}\n        updateSelectedInfo={updateSelectedInfo}\n      />\n      <ChartVisualBarChart selectedInfo={selectedInfo} />\n      <ChartNotice selectedInfo={selectedInfo} />\n    </>\n  )\n}\n\nexport default AllDataChart\n","import React from 'react'\nimport AllDataChart from '../chartComponents/AllDataChart'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducer'\nimport { State } from '../../../@types/reducer.d'\n\nconst AllDataChartContainer = () => {\n  const data: State = useSelector((state: RootState) => state.data)\n\n  return (\n    <AllDataChart\n      majorData={data.majorData.major}\n      campusName={data.campusName}\n    />\n  )\n}\n\nexport default AllDataChartContainer\n","export type ThemeInfo = {\n  name: string\n  icon: string\n}\n\nexport const seoulTheme: ThemeInfo[] = [\n  { name: '영어대학', icon: '/images/english.png' },\n  { name: '프랑스어학부', icon: '/images/france.png' },\n  { name: '스페인어과', icon: '/images/spain.png' },\n  { name: '마인어과', icon: '/images/indonesia.png' },\n  { name: '베트남어과', icon: '/images/vietnam.png' },\n  { name: '중국어대', icon: '/images/china.png' },\n  { name: '일본어대', icon: '/images/japan.png' },\n  { name: '사과대', icon: '/images/social.png' },\n  { name: '미디어커뮤니케이션학부', icon: '/images/broad.png' },\n  { name: '상경대학', icon: '/images/line.png' },\n  { name: '경영학전공', icon: '/images/business.png' },\n  { name: 'LD/LT', icon: '/images/ldlt.png' },\n  { name: '인기융합전공', icon: '/images/converge.png' },\n  { name: '국제학부', icon: '/images/inter.png' },\n]\n\nexport const globalTheme: ThemeInfo[] = [\n  { name: '영어통번역학부', icon: '/images/trans.png' },\n  { name: '경상대학', icon: '/images/bus.png' },\n  { name: '통계학과', icon: '/images/statistics.png' },\n  { name: '인기융합전공', icon: '/images/converge.png' },\n]\n","//* searchTheme함수 => theme을 입력하면 이 theme에 해당하는\nimport { MajorInfo } from '../../@types/majorData'\n\nconst searchTheme = (searchFor: string, majorArr: MajorInfo[]) => {\n  const result = majorArr.filter((elem: MajorInfo) => {\n    return elem.theme === searchFor\n  })\n\n  return result\n}\n\nexport default searchTheme\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport { seoulTheme, globalTheme } from '../../config/themes'\nimport ChartMajorBox from './ChartMajorBox'\nimport searchTheme from '../../utils/searchTheme'\nimport { ChartMajorBoxes } from '../../style/styledComponents/majorBoxes'\nimport { ThemeInfo } from '../../config/themes'\n\ntype ChartSearchSelectProps = {\n  campusName: string\n  majorData: MajorInfo[]\n  updateSelectedThemeInfo: (themeInfo: MajorInfo[]) => void\n}\n\nconst ChartSearchSelect = ({\n  campusName,\n  majorData,\n  updateSelectedThemeInfo,\n}: ChartSearchSelectProps) => {\n  const [themeArr, setThemeArr] = useState<ThemeInfo[]>([])\n\n  useEffect(() => {\n    if (campusName) {\n      campusName === 'seoul'\n        ? setThemeArr(seoulTheme)\n        : setThemeArr(globalTheme)\n    }\n  }, [campusName])\n\n  const setSelectedThemeInfo = (theme: string) => {\n    const selectedThemeInfo = searchTheme(theme, majorData)\n    updateSelectedThemeInfo(selectedThemeInfo)\n  }\n\n  return (\n    <div className=\"chart-search\">\n      <ChartMajorBoxes>\n        {themeArr.map((theme: ThemeInfo) => (\n          <span onClick={() => setSelectedThemeInfo(theme.name)}>\n            <ChartMajorBox major={theme.name} icon={theme.icon} />\n          </span>\n        ))}\n      </ChartMajorBoxes>\n    </div>\n  )\n}\n\nexport default ChartSearchSelect\n","import React, { useState, useEffect } from 'react'\nimport { MajorInfo } from '../../../@types/majorData'\nimport ChartTitle from '../chartResourceComponents/ChartTitle'\nimport ChartVisualBarChart from '../chartResourceComponents/ChartVisualBarChart'\nimport ChartNotice from '../chartResourceComponents/ChartNotice'\nimport ChartSearchSelect from '../chartResourceComponents/ChartSearchSelect'\n\ntype ThemeDataChartProps = {\n  majorData: MajorInfo[]\n  campusName: string\n}\n\nconst ThemeDataChart = ({ majorData, campusName }: ThemeDataChartProps) => {\n  const [selectedThemeInfo, setSelctedThemeInfo] = useState<MajorInfo[]>([])\n\n  useEffect(() => {\n    setSelctedThemeInfo([])\n  }, [majorData])\n\n  const updateSelectedThemeInfo = (themeInfo: MajorInfo[]) => {\n    setSelctedThemeInfo(themeInfo)\n  }\n\n  return (\n    <>\n      <ChartTitle\n        title={'테마보기'}\n        subTitle={\n          '캠퍼스별 자주 찾는 이중전공 변경 여석 데이터를 모아봤습니다. 테마를 선택해 주세요'\n        }\n      />\n      <ChartSearchSelect\n        campusName={campusName}\n        majorData={majorData}\n        updateSelectedThemeInfo={updateSelectedThemeInfo}\n      />\n      <ChartVisualBarChart selectedInfo={selectedThemeInfo} />\n      <ChartNotice selectedInfo={selectedThemeInfo} />\n    </>\n  )\n}\n\nexport default ThemeDataChart\n","import React from 'react'\nimport ThemeDataChart from '../chartComponents/ThemeDataChart'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducer'\nimport { State } from '../../../@types/reducer.d'\n\nconst ThemeDataChartContainer = () => {\n  const data: State = useSelector((state: RootState) => state.data)\n\n  return (\n    <ThemeDataChart\n      majorData={data.majorData.major}\n      campusName={data.campusName}\n    />\n  )\n}\n\nexport default ThemeDataChartContainer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducer'\nimport { State } from '../../../@types/reducer.d'\nimport styled from 'styled-components'\n\ntype AppLayoutContainerProps = {\n  header?: JSX.Element\n  allDataChart: JSX.Element\n  themeDataChart: JSX.Element\n  defaultContent: JSX.Element\n}\n\nconst Content = styled.div`\n  padding-top: 7rem;\n  padding-bottom: 4rem;\n  width: inherit;\n  min-height: 80vh;\n  margin: 0 auto;\n  @media screen and (max-width: 750px) {\n    padding-top: 9rem;\n  }\n`\n\nconst Chart = styled.div`\n  margin-bottom: 1.5rem;\n  padding: 1rem;\n  border: 2px solid #f4f4f4;\n  border-radius: 20px;\n`\n\nconst AppLayoutContainer = ({\n  allDataChart,\n  themeDataChart,\n  defaultContent,\n}: AppLayoutContainerProps) => {\n  const data: State = useSelector((state: RootState) => state.data)\n\n  return (\n    <Content>\n      {data.campusName ? (\n        <>\n          <Chart>{themeDataChart}</Chart>\n          <Chart>{allDataChart}</Chart>\n        </>\n      ) : (\n        <div className=\"default\">{defaultContent}</div>\n      )}\n    </Content>\n  )\n}\n\nexport default AppLayoutContainer\n","import React from 'react'\nimport styled from 'styled-components'\nimport Emoji from '../Emoji'\nimport { Introduce } from '../../config/introduce'\n\nconst CardWrap = styled.div`\n  text-align: center;\n  border-radius: 20px;\n  padding-top: 8rem;\n  padding-bottom: 3rem;\n`\n\nconst CardTitle = styled.div`\n  font-weight: 700;\n  margin-bottom: 2rem;\n  font-size: 1.2rem;\n  @media screen and (max-width: 750px) {\n    font-size: 0.9rem;\n  }\n  @media screen and (max-width: 380px) {\n    font-size: 0.7rem;\n  }\n`\n\nconst CardLogo = styled.div`\n  font-size: 5rem;\n  margin-bottom: 1rem;\n`\n\nconst CardContent = styled.div`\n  font-size: 0.8rem;\n  @media screen and (max-width: 750px) {\n    font-size: 0.6rem;\n  }\n\n  @media screen and (max-width: 360px) {\n    font-size: 0.5rem;\n  }\n`\n\nconst IntroduceCard = ({ title, emoji, contents }: Introduce) => {\n  return (\n    <CardWrap>\n      <CardLogo>\n        <Emoji label=\"intro\" emoji={emoji} />\n      </CardLogo>\n      <CardTitle>{title}</CardTitle>\n      {contents.map(content => (\n        <CardContent>{content}</CardContent>\n      ))}\n    </CardWrap>\n  )\n}\n\nexport default IntroduceCard\n","export type Introduce = {\n  id: number\n  title: string\n  emoji: string\n  contents: string[]\n}\n\nexport const introduceArr: Introduce[] = [\n  {\n    id: 0,\n    title: '4학기 동안의 이중 변경 여석 데이터를 확인하세요',\n    emoji: '📈',\n    contents: [\n      '지금 당장 변경할 예정이 아니더라도, 확인해보세요!',\n      '4학기 동안의 추이를 바탕으로 다음학기 여석을 예상해볼 수 있습니다.',\n    ],\n  },\n  {\n    id: 1,\n    title: '이중전공 변경 데이터를 그래프로 쉽게 조회하세요',\n    emoji: '📊',\n    contents: [\n      '입력 학번과 캠퍼스에 해당하는 4학기 동안의 이중전공 변경 데이터를',\n      '막대그래프로 표현해 손쉽게 확인할 수 있습니다.',\n    ],\n  },\n  {\n    id: 2,\n    title: '유익한 데이터들도 같이 만나보세요',\n    emoji: '✨',\n    contents: [\n      '이중전공 지원 정보를 정리한 테이블과, 경영학과 이중변경/신청 시험',\n      '학번별 합격자 비율(추후 개발 예정) 역시 조회하실 수 있습니다.',\n    ],\n  },\n]\n","import React, { useState, useEffect } from 'react'\nimport IntroduceCards from './IntroduceCard'\nimport { introduceArr, Introduce } from '../../config/introduce'\nimport styled from 'styled-components'\n\nconst IntroduceCardsWrap = styled.div`\n  text-align: center;\n`\nconst NavigationDot = styled.span<{ checked: boolean }>`\n  margin-right: 1rem;\n  color: #002a48;\n  font-size: 2rem;\n  opacity: ${props => (props.checked ? 1 : 0.5)};\n  cursor: pointer;\n`\n\nconst DefaultContent = () => {\n  const [cardNum, setCardNum] = useState<number>(0)\n  const introduceLength = introduceArr.length\n\n  useEffect(() => {\n    let cardTimer = setInterval(() => setCardNum(num => num + 1), 5000)\n    return () => clearInterval(cardTimer)\n  }, [cardNum])\n\n  const updateCardNum = (idx: number) => {\n    setCardNum(idx)\n  }\n\n  const { id, title, emoji, contents }: Introduce = introduceArr[\n    cardNum % introduceLength\n  ]\n\n  return (\n    <IntroduceCardsWrap>\n      <IntroduceCards id={id} title={title} emoji={emoji} contents={contents} />\n      {introduceArr.map((card, idx) =>\n        idx === cardNum % introduceLength ? (\n          <NavigationDot key={idx} checked={true}>\n            ·\n          </NavigationDot>\n        ) : (\n          <NavigationDot\n            key={idx}\n            checked={false}\n            onClick={() => {\n              updateCardNum(idx)\n            }}\n          >\n            ·\n          </NavigationDot>\n        ),\n      )}\n    </IntroduceCardsWrap>\n  )\n}\n\nexport default DefaultContent\n","import styled from 'styled-components'\n\nexport const FooterWrap = styled.div`\n  width: initial;\n  background-color: #f6f9fc;\n  padding: 2rem 0;\n  border-top: 1px solid #ededed;\n`\n\nexport const FooterContent = styled.div`\n  width: 80%;\n  margin: 0 auto;\n\n  @media screen and (max-width: 750px) {\n    width: 90%;\n  }\n\n  @media screen and (max-width: 360px) {\n    width: 95%;\n  }\n`\n\nexport const FooterIcons = styled.div`\n  display: flex;\n  margin-top: 0.6rem;\n`\n\nexport const FooterIcon = styled.div`\n  cursor: pointer;\n  margin-right: 0.8rem;\n  img {\n    width: 2.2rem;\n    height: auto;\n  }\n`\n\nexport const FooterCopyrigths = styled.div`\n  font-size: 0.5rem;\n  margin-top: 0.7rem;\n`\n\nexport const FooterIntroduce = styled.div`\n  font-size: 1.5rem;\n  font-family: Noto Sans KR;\n  font-weight: bold;\n  @media screen and (max-width: 420px) {\n    font-size: 1.2rem;\n  }\n`\n\nexport const FooterSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n  @media screen and (max-width: 380px) {\n    flex-direction: column;\n  }\n`\n\nexport const FooterIntroduceDetail = styled.div`\n  font-size: 0.8rem;\n  @media screen and (max-width: 420px) {\n    font-size: 0.7rem;\n  }\n`\n","import React from 'react'\nimport Emoji from '../Emoji'\nimport {\n  FooterCopyrigths,\n  FooterContent,\n  FooterIntroduce,\n  FooterSection,\n  FooterIcons,\n  FooterIcon,\n  FooterWrap,\n  FooterIntroduceDetail,\n} from './footerStyledComponents'\n\nconst Footer = () => {\n  return (\n    <FooterWrap>\n      <FooterContent>\n        <FooterIntroduce>\n          Developed by <Emoji label=\"max\" emoji=\"🧑🏻‍💻\" />\n          Max Kim\n        </FooterIntroduce>\n        <FooterIntroduceDetail>\n          <div>자바스크립트 개발자이자 융소를 이중하는 고학번입니다.</div>\n          <div>\n            서비스에 대한 피드백, 기타 제안은 하단 메일로 부탁드리겠습니다..!\n          </div>\n        </FooterIntroduceDetail>\n        <FooterSection>\n          <FooterIcons>\n            <FooterIcon>\n              <a href=\"https://github.com/MaxKim-J\">\n                <img\n                  src=\"https://img.icons8.com/color/144/000000/github-2.png\"\n                  alt=\"github\"\n                />\n              </a>\n            </FooterIcon>\n            <FooterIcon>\n              <a href=\"mailto:hwaseen@gmail.com\">\n                <img\n                  src=\"https://img.icons8.com/color/144/000000/gmail.png\"\n                  alt=\"gmail\"\n                />\n              </a>\n            </FooterIcon>\n            <FooterIcon>\n              <a href=\"https://maxkim-j.github.io/\">\n                <img\n                  src=\"https://img.icons8.com/color/150/000000/devpost.png\"\n                  alt=\"blog\"\n                />\n              </a>\n            </FooterIcon>\n          </FooterIcons>\n          <FooterCopyrigths>\n            <div>HUFS Second Major 1.1.0 © Max Kim. 2020</div>\n            <div>\n              Icons made by &nbsp;\n              <a\n                href=\"https://www.flaticon.com/authors/roundicons\"\n                title=\"Roundicons\"\n              >\n                Roundicons &nbsp;\n              </a>\n              from&nbsp;\n              <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n                www.flaticon.com\n              </a>\n            </div>\n          </FooterCopyrigths>\n        </FooterSection>\n      </FooterContent>\n    </FooterWrap>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport HeaderContainer from './components/container/HeaderContainer'\nimport AllDataChartContainer from './components/container/AllDataChartContainer'\nimport ThemeDataChartContainer from './components/container/ThemeDataChartContainer'\nimport AppLayoutContainer from './components/container/AppLayoutContainer'\nimport DefaultContent from './components/default/DefaultContent'\nimport Footer from './components/footer/Footer'\nimport '../src/style/font.css'\nimport '../src/style/global.css'\nimport styled from 'styled-components'\n\nconst AppWrap = styled.div`\n  width: 85%;\n  margin: 0 auto;\n\n  @media screen and (max-width: 770px) {\n    width: 90%;\n  }\n\n  @media screen and (max-width: 360px) {\n    width: 95%;\n  }\n`\n\nconst App = () => {\n  return (\n    <>\n      <HeaderContainer />\n      <AppWrap>\n        <AppLayoutContainer\n          allDataChart={<AllDataChartContainer />}\n          themeDataChart={<ThemeDataChartContainer />}\n          defaultContent={<DefaultContent />}\n        />\n      </AppWrap>\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","import { combineReducers } from 'redux'\nimport data from './data'\n\nconst rootReducer = combineReducers({\n  data,\n})\n\nexport default rootReducer\nexport type RootState = ReturnType<typeof rootReducer>\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducer'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}